//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.10.18 at 08:38:59 AM UTC 
//


package net.sourceforge.czt.circus.jaxb.gen;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.sourceforge.czt.circus.jaxb.gen package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ActionType_QNAME = new QName("http://czt.sourceforge.net/circus", "ActionType");
    private final static QName _SeqActionIte_QNAME = new QName("http://czt.sourceforge.net/circus", "SeqActionIte");
    private final static QName _CommunicationList_QNAME = new QName("http://czt.sourceforge.net/circus", "CommunicationList");
    private final static QName _CallAction_QNAME = new QName("http://czt.sourceforge.net/circus", "CallAction");
    private final static QName _ProcessSignatureAnn_QNAME = new QName("http://czt.sourceforge.net/circus", "ProcessSignatureAnn");
    private final static QName _ChannelDecl_QNAME = new QName("http://czt.sourceforge.net/circus", "ChannelDecl");
    private final static QName _NameSetType_QNAME = new QName("http://czt.sourceforge.net/circus", "NameSetType");
    private final static QName _SkipAction_QNAME = new QName("http://czt.sourceforge.net/circus", "SkipAction");
    private final static QName _ChannelSetType_QNAME = new QName("http://czt.sourceforge.net/circus", "ChannelSetType");
    private final static QName _CircusNameSet_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusNameSet");
    private final static QName _ParamAction_QNAME = new QName("http://czt.sourceforge.net/circus", "ParamAction");
    private final static QName _ProcessPara_QNAME = new QName("http://czt.sourceforge.net/circus", "ProcessPara");
    private final static QName _AlphabetisedParallelAction_QNAME = new QName("http://czt.sourceforge.net/circus", "AlphabetisedParallelAction");
    private final static QName _CircusNameSetList_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusNameSetList");
    private final static QName _GuardedAction_QNAME = new QName("http://czt.sourceforge.net/circus", "GuardedAction");
    private final static QName _TransformerPred_QNAME = new QName("http://czt.sourceforge.net/circus", "TransformerPred");
    private final static QName _ChannelSet_QNAME = new QName("http://czt.sourceforge.net/circus", "ChannelSet");
    private final static QName _IntChoiceProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "IntChoiceProcess");
    private final static QName _AlphabetisedParallelProcessIte_QNAME = new QName("http://czt.sourceforge.net/circus", "AlphabetisedParallelProcessIte");
    private final static QName _RenameProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "RenameProcess");
    private final static QName _CircusStateAnn_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusStateAnn");
    private final static QName _RenameAction_QNAME = new QName("http://czt.sourceforge.net/circus", "RenameAction");
    private final static QName _ActionSignature_QNAME = new QName("http://czt.sourceforge.net/circus", "ActionSignature");
    private final static QName _VarDeclCommand_QNAME = new QName("http://czt.sourceforge.net/circus", "VarDeclCommand");
    private final static QName _ImplicitChannelAnn_QNAME = new QName("http://czt.sourceforge.net/circus", "ImplicitChannelAnn");
    private final static QName _AlphabetisedParallelProcessIdx_QNAME = new QName("http://czt.sourceforge.net/circus", "AlphabetisedParallelProcessIdx");
    private final static QName _InterleaveActionIte_QNAME = new QName("http://czt.sourceforge.net/circus", "InterleaveActionIte");
    private final static QName _AlphabetisedParallelProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "AlphabetisedParallelProcess");
    private final static QName _ChaosAction_QNAME = new QName("http://czt.sourceforge.net/circus", "ChaosAction");
    private final static QName _AlphabetisedParallelActionIte_QNAME = new QName("http://czt.sourceforge.net/circus", "AlphabetisedParallelActionIte");
    private final static QName _ActionSignatureList_QNAME = new QName("http://czt.sourceforge.net/circus", "ActionSignatureList");
    private final static QName _AssignmentPairs_QNAME = new QName("http://czt.sourceforge.net/circus", "AssignmentPairs");
    private final static QName _TransformerPara_QNAME = new QName("http://czt.sourceforge.net/circus", "TransformerPara");
    private final static QName _StateUpdate_QNAME = new QName("http://czt.sourceforge.net/circus", "StateUpdate");
    private final static QName _SeqProcessIdx_QNAME = new QName("http://czt.sourceforge.net/circus", "SeqProcessIdx");
    private final static QName _ChannelSetPara_QNAME = new QName("http://czt.sourceforge.net/circus", "ChannelSetPara");
    private final static QName _CircusCommunicationList_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusCommunicationList");
    private final static QName _ExtChoiceProcessIdx_QNAME = new QName("http://czt.sourceforge.net/circus", "ExtChoiceProcessIdx");
    private final static QName _LetAction_QNAME = new QName("http://czt.sourceforge.net/circus", "LetAction");
    private final static QName _CircusChannelSetList_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusChannelSetList");
    private final static QName _ParallelAction_QNAME = new QName("http://czt.sourceforge.net/circus", "ParallelAction");
    private final static QName _ParActionIte_QNAME = new QName("http://czt.sourceforge.net/circus", "ParActionIte");
    private final static QName _ActionIte_QNAME = new QName("http://czt.sourceforge.net/circus", "ActionIte");
    private final static QName _ExtChoiceProcessIte_QNAME = new QName("http://czt.sourceforge.net/circus", "ExtChoiceProcessIte");
    private final static QName _ParamProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "ParamProcess");
    private final static QName _SeqProcessIte_QNAME = new QName("http://czt.sourceforge.net/circus", "SeqProcessIte");
    private final static QName _ActionList_QNAME = new QName("http://czt.sourceforge.net/circus", "ActionList");
    private final static QName _ParProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "ParProcess");
    private final static QName _CircusSignature_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusSignature");
    private final static QName _ExtChoiceActionIte_QNAME = new QName("http://czt.sourceforge.net/circus", "ExtChoiceActionIte");
    private final static QName _ProcessType_QNAME = new QName("http://czt.sourceforge.net/circus", "ProcessType");
    private final static QName _IfGuardedCommand_QNAME = new QName("http://czt.sourceforge.net/circus", "IfGuardedCommand");
    private final static QName _ActionD_QNAME = new QName("http://czt.sourceforge.net/circus", "ActionD");
    private final static QName _InterleaveAction_QNAME = new QName("http://czt.sourceforge.net/circus", "InterleaveAction");
    private final static QName _ProcessTransformerPred_QNAME = new QName("http://czt.sourceforge.net/circus", "ProcessTransformerPred");
    private final static QName _Action1_QNAME = new QName("http://czt.sourceforge.net/circus", "Action1");
    private final static QName _InputField_QNAME = new QName("http://czt.sourceforge.net/circus", "InputField");
    private final static QName _Action2_QNAME = new QName("http://czt.sourceforge.net/circus", "Action2");
    private final static QName _BasicAction_QNAME = new QName("http://czt.sourceforge.net/circus", "BasicAction");
    private final static QName _HideProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "HideProcess");
    private final static QName _SeqAction_QNAME = new QName("http://czt.sourceforge.net/circus", "SeqAction");
    private final static QName _ExtChoiceProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "ExtChoiceProcess");
    private final static QName _LetMuAction_QNAME = new QName("http://czt.sourceforge.net/circus", "LetMuAction");
    private final static QName _ChannelType_QNAME = new QName("http://czt.sourceforge.net/circus", "ChannelType");
    private final static QName _IntChoiceActionIte_QNAME = new QName("http://czt.sourceforge.net/circus", "IntChoiceActionIte");
    private final static QName _SpecStmtCommand_QNAME = new QName("http://czt.sourceforge.net/circus", "SpecStmtCommand");
    private final static QName _StateUpdateAnn_QNAME = new QName("http://czt.sourceforge.net/circus", "StateUpdateAnn");
    private final static QName _InterleaveProcessIdx_QNAME = new QName("http://czt.sourceforge.net/circus", "InterleaveProcessIdx");
    private final static QName _MuAction_QNAME = new QName("http://czt.sourceforge.net/circus", "MuAction");
    private final static QName _ExtChoiceAction_QNAME = new QName("http://czt.sourceforge.net/circus", "ExtChoiceAction");
    private final static QName _SubstitutionAction_QNAME = new QName("http://czt.sourceforge.net/circus", "SubstitutionAction");
    private final static QName _CircusSigType_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusSigType");
    private final static QName _IntChoiceAction_QNAME = new QName("http://czt.sourceforge.net/circus", "IntChoiceAction");
    private final static QName _BasicChannelSetExpr_QNAME = new QName("http://czt.sourceforge.net/circus", "BasicChannelSetExpr");
    private final static QName _InterleaveProcessIte_QNAME = new QName("http://czt.sourceforge.net/circus", "InterleaveProcessIte");
    private final static QName _DoGuardedCommand_QNAME = new QName("http://czt.sourceforge.net/circus", "DoGuardedCommand");
    private final static QName _CircusCommand_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusCommand");
    private final static QName _CircusAction_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusAction");
    private final static QName _SeqProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "SeqProcess");
    private final static QName _InterruptAction_QNAME = new QName("http://czt.sourceforge.net/circus", "InterruptAction");
    private final static QName _Field_QNAME = new QName("http://czt.sourceforge.net/circus", "Field");
    private final static QName _ParallelActionIte_QNAME = new QName("http://czt.sourceforge.net/circus", "ParallelActionIte");
    private final static QName _ParAction_QNAME = new QName("http://czt.sourceforge.net/circus", "ParAction");
    private final static QName _ChannelPara_QNAME = new QName("http://czt.sourceforge.net/circus", "ChannelPara");
    private final static QName _BasicProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "BasicProcess");
    private final static QName _ActionTransformerPred_QNAME = new QName("http://czt.sourceforge.net/circus", "ActionTransformerPred");
    private final static QName _CircusFieldList_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusFieldList");
    private final static QName _CommunicationType_QNAME = new QName("http://czt.sourceforge.net/circus", "CommunicationType");
    private final static QName _CircusAnn_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusAnn");
    private final static QName _DotField_QNAME = new QName("http://czt.sourceforge.net/circus", "DotField");
    private final static QName _NameSetList_QNAME = new QName("http://czt.sourceforge.net/circus", "NameSetList");
    private final static QName _InterleaveProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "InterleaveProcess");
    private final static QName _CircusProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusProcess");
    private final static QName _SignatureList_QNAME = new QName("http://czt.sourceforge.net/circus", "SignatureList");
    private final static QName _ProofObligationAnn_QNAME = new QName("http://czt.sourceforge.net/circus", "ProofObligationAnn");
    private final static QName _IndexedProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "IndexedProcess");
    private final static QName _CircusChannelSet_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusChannelSet");
    private final static QName _ProcessIdx_QNAME = new QName("http://czt.sourceforge.net/circus", "ProcessIdx");
    private final static QName _ActionSignatureAnn_QNAME = new QName("http://czt.sourceforge.net/circus", "ActionSignatureAnn");
    private final static QName _ParProcessIte_QNAME = new QName("http://czt.sourceforge.net/circus", "ParProcessIte");
    private final static QName _ProcessSignatureList_QNAME = new QName("http://czt.sourceforge.net/circus", "ProcessSignatureList");
    private final static QName _HideAction_QNAME = new QName("http://czt.sourceforge.net/circus", "HideAction");
    private final static QName _OnTheFlyDefAnn_QNAME = new QName("http://czt.sourceforge.net/circus", "OnTheFlyDefAnn");
    private final static QName _ParallelProcessIdx_QNAME = new QName("http://czt.sourceforge.net/circus", "ParallelProcessIdx");
    private final static QName _OutputFieldAnn_QNAME = new QName("http://czt.sourceforge.net/circus", "OutputFieldAnn");
    private final static QName _ProcessD_QNAME = new QName("http://czt.sourceforge.net/circus", "ProcessD");
    private final static QName _LetVarAction_QNAME = new QName("http://czt.sourceforge.net/circus", "LetVarAction");
    private final static QName _CircusGuardedCommand_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusGuardedCommand");
    private final static QName _Process1_QNAME = new QName("http://czt.sourceforge.net/circus", "Process1");
    private final static QName _Process2_QNAME = new QName("http://czt.sourceforge.net/circus", "Process2");
    private final static QName _ProcessIte_QNAME = new QName("http://czt.sourceforge.net/circus", "ProcessIte");
    private final static QName _SchExprAction_QNAME = new QName("http://czt.sourceforge.net/circus", "SchExprAction");
    private final static QName _ParallelProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "ParallelProcess");
    private final static QName _NameSetPara_QNAME = new QName("http://czt.sourceforge.net/circus", "NameSetPara");
    private final static QName _ParProcessIdx_QNAME = new QName("http://czt.sourceforge.net/circus", "ParProcessIdx");
    private final static QName _StopAction_QNAME = new QName("http://czt.sourceforge.net/circus", "StopAction");
    private final static QName _SigmaExpr_QNAME = new QName("http://czt.sourceforge.net/circus", "SigmaExpr");
    private final static QName _QualifiedDecl_QNAME = new QName("http://czt.sourceforge.net/circus", "QualifiedDecl");
    private final static QName _CallProcess_QNAME = new QName("http://czt.sourceforge.net/circus", "CallProcess");
    private final static QName _ParallelProcessIte_QNAME = new QName("http://czt.sourceforge.net/circus", "ParallelProcessIte");
    private final static QName _IntChoiceProcessIte_QNAME = new QName("http://czt.sourceforge.net/circus", "IntChoiceProcessIte");
    private final static QName _CircusConjPara_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusConjPara");
    private final static QName _ProcessSignature_QNAME = new QName("http://czt.sourceforge.net/circus", "ProcessSignature");
    private final static QName _FieldList_QNAME = new QName("http://czt.sourceforge.net/circus", "FieldList");
    private final static QName _CircusType_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusType");
    private final static QName _ChannelSetList_QNAME = new QName("http://czt.sourceforge.net/circus", "ChannelSetList");
    private final static QName _PrefixingAction_QNAME = new QName("http://czt.sourceforge.net/circus", "PrefixingAction");
    private final static QName _Communication_QNAME = new QName("http://czt.sourceforge.net/circus", "Communication");
    private final static QName _CircusActionList_QNAME = new QName("http://czt.sourceforge.net/circus", "CircusActionList");
    private final static QName _IntChoiceProcessIdx_QNAME = new QName("http://czt.sourceforge.net/circus", "IntChoiceProcessIdx");
    private final static QName _ActionPara_QNAME = new QName("http://czt.sourceforge.net/circus", "ActionPara");
    private final static QName _NameSet_QNAME = new QName("http://czt.sourceforge.net/circus", "NameSet");
    private final static QName _ZSignatureList_QNAME = new QName("http://czt.sourceforge.net/circus", "ZSignatureList");
    private final static QName _AssignmentCommand_QNAME = new QName("http://czt.sourceforge.net/circus", "AssignmentCommand");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.sourceforge.czt.circus.jaxb.gen
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link TransformerPara }
     * 
     */
    public TransformerPara createTransformerPara() {
        return new TransformerPara();
    }

    /**
     * Create an instance of {@link CircusConjPara }
     * 
     */
    public CircusConjPara createCircusConjPara() {
        return new CircusConjPara();
    }

    /**
     * Create an instance of {@link CircusProcess }
     * 
     */
    public CircusProcess createCircusProcess() {
        return new CircusProcess();
    }

    /**
     * Create an instance of {@link SignatureList }
     * 
     */
    public SignatureList createSignatureList() {
        return new SignatureList();
    }

    /**
     * Create an instance of {@link StateUpdate }
     * 
     */
    public StateUpdate createStateUpdate() {
        return new StateUpdate();
    }

    /**
     * Create an instance of {@link IndexedProcess }
     * 
     */
    public IndexedProcess createIndexedProcess() {
        return new IndexedProcess();
    }

    /**
     * Create an instance of {@link ProcessD }
     * 
     */
    public ProcessD createProcessD() {
        return new ProcessD();
    }

    /**
     * Create an instance of {@link Process1 }
     * 
     */
    public Process1 createProcess1() {
        return new Process1();
    }

    /**
     * Create an instance of {@link ProofObligationAnn }
     * 
     */
    public ProofObligationAnn createProofObligationAnn() {
        return new ProofObligationAnn();
    }

    /**
     * Create an instance of {@link CircusAnn }
     * 
     */
    public CircusAnn createCircusAnn() {
        return new CircusAnn();
    }

    /**
     * Create an instance of {@link ChannelSetPara }
     * 
     */
    public ChannelSetPara createChannelSetPara() {
        return new ChannelSetPara();
    }

    /**
     * Create an instance of {@link SeqProcessIdx }
     * 
     */
    public SeqProcessIdx createSeqProcessIdx() {
        return new SeqProcessIdx();
    }

    /**
     * Create an instance of {@link ProcessIdx }
     * 
     */
    public ProcessIdx createProcessIdx() {
        return new ProcessIdx();
    }

    /**
     * Create an instance of {@link ProcessIte }
     * 
     */
    public ProcessIte createProcessIte() {
        return new ProcessIte();
    }

    /**
     * Create an instance of {@link CircusCommunicationList }
     * 
     */
    public CircusCommunicationList createCircusCommunicationList() {
        return new CircusCommunicationList();
    }

    /**
     * Create an instance of {@link CommunicationList }
     * 
     */
    public CommunicationList createCommunicationList() {
        return new CommunicationList();
    }

    /**
     * Create an instance of {@link CircusChannelSet }
     * 
     */
    public CircusChannelSet createCircusChannelSet() {
        return new CircusChannelSet();
    }

    /**
     * Create an instance of {@link ChannelSet }
     * 
     */
    public ChannelSet createChannelSet() {
        return new ChannelSet();
    }

    /**
     * Create an instance of {@link ParProcessIte }
     * 
     */
    public ParProcessIte createParProcessIte() {
        return new ParProcessIte();
    }

    /**
     * Create an instance of {@link ExtChoiceProcessIdx }
     * 
     */
    public ExtChoiceProcessIdx createExtChoiceProcessIdx() {
        return new ExtChoiceProcessIdx();
    }

    /**
     * Create an instance of {@link ActionSignatureAnn }
     * 
     */
    public ActionSignatureAnn createActionSignatureAnn() {
        return new ActionSignatureAnn();
    }

    /**
     * Create an instance of {@link ProcessSignatureList }
     * 
     */
    public ProcessSignatureList createProcessSignatureList() {
        return new ProcessSignatureList();
    }

    /**
     * Create an instance of {@link LetAction }
     * 
     */
    public LetAction createLetAction() {
        return new LetAction();
    }

    /**
     * Create an instance of {@link Action1 }
     * 
     */
    public Action1 createAction1() {
        return new Action1();
    }

    /**
     * Create an instance of {@link CircusAction }
     * 
     */
    public CircusAction createCircusAction() {
        return new CircusAction();
    }

    /**
     * Create an instance of {@link CircusChannelSetList }
     * 
     */
    public CircusChannelSetList createCircusChannelSetList() {
        return new CircusChannelSetList();
    }

    /**
     * Create an instance of {@link ChannelSetList }
     * 
     */
    public ChannelSetList createChannelSetList() {
        return new ChannelSetList();
    }

    /**
     * Create an instance of {@link HideAction }
     * 
     */
    public HideAction createHideAction() {
        return new HideAction();
    }

    /**
     * Create an instance of {@link ParActionIte }
     * 
     */
    public ParActionIte createParActionIte() {
        return new ParActionIte();
    }

    /**
     * Create an instance of {@link ActionIte }
     * 
     */
    public ActionIte createActionIte() {
        return new ActionIte();
    }

    /**
     * Create an instance of {@link ActionD }
     * 
     */
    public ActionD createActionD() {
        return new ActionD();
    }

    /**
     * Create an instance of {@link ParallelAction }
     * 
     */
    public ParallelAction createParallelAction() {
        return new ParallelAction();
    }

    /**
     * Create an instance of {@link ParAction }
     * 
     */
    public ParAction createParAction() {
        return new ParAction();
    }

    /**
     * Create an instance of {@link Action2 }
     * 
     */
    public Action2 createAction2() {
        return new Action2();
    }

    /**
     * Create an instance of {@link ExtChoiceProcessIte }
     * 
     */
    public ExtChoiceProcessIte createExtChoiceProcessIte() {
        return new ExtChoiceProcessIte();
    }

    /**
     * Create an instance of {@link ParallelProcessIdx }
     * 
     */
    public ParallelProcessIdx createParallelProcessIdx() {
        return new ParallelProcessIdx();
    }

    /**
     * Create an instance of {@link ParProcessIdx }
     * 
     */
    public ParProcessIdx createParProcessIdx() {
        return new ParProcessIdx();
    }

    /**
     * Create an instance of {@link OutputFieldAnn }
     * 
     */
    public OutputFieldAnn createOutputFieldAnn() {
        return new OutputFieldAnn();
    }

    /**
     * Create an instance of {@link OnTheFlyDefAnn }
     * 
     */
    public OnTheFlyDefAnn createOnTheFlyDefAnn() {
        return new OnTheFlyDefAnn();
    }

    /**
     * Create an instance of {@link LetVarAction }
     * 
     */
    public LetVarAction createLetVarAction() {
        return new LetVarAction();
    }

    /**
     * Create an instance of {@link CircusGuardedCommand }
     * 
     */
    public CircusGuardedCommand createCircusGuardedCommand() {
        return new CircusGuardedCommand();
    }

    /**
     * Create an instance of {@link CircusCommand }
     * 
     */
    public CircusCommand createCircusCommand() {
        return new CircusCommand();
    }

    /**
     * Create an instance of {@link ParamProcess }
     * 
     */
    public ParamProcess createParamProcess() {
        return new ParamProcess();
    }

    /**
     * Create an instance of {@link Process2 }
     * 
     */
    public Process2 createProcess2() {
        return new Process2();
    }

    /**
     * Create an instance of {@link NameSetPara }
     * 
     */
    public NameSetPara createNameSetPara() {
        return new NameSetPara();
    }

    /**
     * Create an instance of {@link SeqProcessIte }
     * 
     */
    public SeqProcessIte createSeqProcessIte() {
        return new SeqProcessIte();
    }

    /**
     * Create an instance of {@link ParallelProcess }
     * 
     */
    public ParallelProcess createParallelProcess() {
        return new ParallelProcess();
    }

    /**
     * Create an instance of {@link ParProcess }
     * 
     */
    public ParProcess createParProcess() {
        return new ParProcess();
    }

    /**
     * Create an instance of {@link SchExprAction }
     * 
     */
    public SchExprAction createSchExprAction() {
        return new SchExprAction();
    }

    /**
     * Create an instance of {@link StopAction }
     * 
     */
    public StopAction createStopAction() {
        return new StopAction();
    }

    /**
     * Create an instance of {@link BasicAction }
     * 
     */
    public BasicAction createBasicAction() {
        return new BasicAction();
    }

    /**
     * Create an instance of {@link ActionList }
     * 
     */
    public ActionList createActionList() {
        return new ActionList();
    }

    /**
     * Create an instance of {@link QualifiedDecl }
     * 
     */
    public QualifiedDecl createQualifiedDecl() {
        return new QualifiedDecl();
    }

    /**
     * Create an instance of {@link SigmaExpr }
     * 
     */
    public SigmaExpr createSigmaExpr() {
        return new SigmaExpr();
    }

    /**
     * Create an instance of {@link CircusSignature }
     * 
     */
    public CircusSignature createCircusSignature() {
        return new CircusSignature();
    }

    /**
     * Create an instance of {@link ParallelProcessIte }
     * 
     */
    public ParallelProcessIte createParallelProcessIte() {
        return new ParallelProcessIte();
    }

    /**
     * Create an instance of {@link CallProcess }
     * 
     */
    public CallProcess createCallProcess() {
        return new CallProcess();
    }

    /**
     * Create an instance of {@link IntChoiceProcessIte }
     * 
     */
    public IntChoiceProcessIte createIntChoiceProcessIte() {
        return new IntChoiceProcessIte();
    }

    /**
     * Create an instance of {@link ProcessSignature }
     * 
     */
    public ProcessSignature createProcessSignature() {
        return new ProcessSignature();
    }

    /**
     * Create an instance of {@link ExtChoiceActionIte }
     * 
     */
    public ExtChoiceActionIte createExtChoiceActionIte() {
        return new ExtChoiceActionIte();
    }

    /**
     * Create an instance of {@link FieldList }
     * 
     */
    public FieldList createFieldList() {
        return new FieldList();
    }

    /**
     * Create an instance of {@link IfGuardedCommand }
     * 
     */
    public IfGuardedCommand createIfGuardedCommand() {
        return new IfGuardedCommand();
    }

    /**
     * Create an instance of {@link ProcessType }
     * 
     */
    public ProcessType createProcessType() {
        return new ProcessType();
    }

    /**
     * Create an instance of {@link CircusType }
     * 
     */
    public CircusType createCircusType() {
        return new CircusType();
    }

    /**
     * Create an instance of {@link InterleaveAction }
     * 
     */
    public InterleaveAction createInterleaveAction() {
        return new InterleaveAction();
    }

    /**
     * Create an instance of {@link PrefixingAction }
     * 
     */
    public PrefixingAction createPrefixingAction() {
        return new PrefixingAction();
    }

    /**
     * Create an instance of {@link ProcessTransformerPred }
     * 
     */
    public ProcessTransformerPred createProcessTransformerPred() {
        return new ProcessTransformerPred();
    }

    /**
     * Create an instance of {@link TransformerPred }
     * 
     */
    public TransformerPred createTransformerPred() {
        return new TransformerPred();
    }

    /**
     * Create an instance of {@link CircusActionList }
     * 
     */
    public CircusActionList createCircusActionList() {
        return new CircusActionList();
    }

    /**
     * Create an instance of {@link Communication }
     * 
     */
    public Communication createCommunication() {
        return new Communication();
    }

    /**
     * Create an instance of {@link IntChoiceProcessIdx }
     * 
     */
    public IntChoiceProcessIdx createIntChoiceProcessIdx() {
        return new IntChoiceProcessIdx();
    }

    /**
     * Create an instance of {@link InputField }
     * 
     */
    public InputField createInputField() {
        return new InputField();
    }

    /**
     * Create an instance of {@link Field }
     * 
     */
    public Field createField() {
        return new Field();
    }

    /**
     * Create an instance of {@link HideProcess }
     * 
     */
    public HideProcess createHideProcess() {
        return new HideProcess();
    }

    /**
     * Create an instance of {@link ActionPara }
     * 
     */
    public ActionPara createActionPara() {
        return new ActionPara();
    }

    /**
     * Create an instance of {@link NameSet }
     * 
     */
    public NameSet createNameSet() {
        return new NameSet();
    }

    /**
     * Create an instance of {@link SeqAction }
     * 
     */
    public SeqAction createSeqAction() {
        return new SeqAction();
    }

    /**
     * Create an instance of {@link ExtChoiceProcess }
     * 
     */
    public ExtChoiceProcess createExtChoiceProcess() {
        return new ExtChoiceProcess();
    }

    /**
     * Create an instance of {@link LetMuAction }
     * 
     */
    public LetMuAction createLetMuAction() {
        return new LetMuAction();
    }

    /**
     * Create an instance of {@link ZSignatureList }
     * 
     */
    public ZSignatureList createZSignatureList() {
        return new ZSignatureList();
    }

    /**
     * Create an instance of {@link AssignmentCommand }
     * 
     */
    public AssignmentCommand createAssignmentCommand() {
        return new AssignmentCommand();
    }

    /**
     * Create an instance of {@link ChannelType }
     * 
     */
    public ChannelType createChannelType() {
        return new ChannelType();
    }

    /**
     * Create an instance of {@link ActionType }
     * 
     */
    public ActionType createActionType() {
        return new ActionType();
    }

    /**
     * Create an instance of {@link SeqActionIte }
     * 
     */
    public SeqActionIte createSeqActionIte() {
        return new SeqActionIte();
    }

    /**
     * Create an instance of {@link IntChoiceActionIte }
     * 
     */
    public IntChoiceActionIte createIntChoiceActionIte() {
        return new IntChoiceActionIte();
    }

    /**
     * Create an instance of {@link CallAction }
     * 
     */
    public CallAction createCallAction() {
        return new CallAction();
    }

    /**
     * Create an instance of {@link SpecStmtCommand }
     * 
     */
    public SpecStmtCommand createSpecStmtCommand() {
        return new SpecStmtCommand();
    }

    /**
     * Create an instance of {@link StateUpdateAnn }
     * 
     */
    public StateUpdateAnn createStateUpdateAnn() {
        return new StateUpdateAnn();
    }

    /**
     * Create an instance of {@link ChannelDecl }
     * 
     */
    public ChannelDecl createChannelDecl() {
        return new ChannelDecl();
    }

    /**
     * Create an instance of {@link NameSetType }
     * 
     */
    public NameSetType createNameSetType() {
        return new NameSetType();
    }

    /**
     * Create an instance of {@link CircusSigType }
     * 
     */
    public CircusSigType createCircusSigType() {
        return new CircusSigType();
    }

    /**
     * Create an instance of {@link InterleaveProcessIdx }
     * 
     */
    public InterleaveProcessIdx createInterleaveProcessIdx() {
        return new InterleaveProcessIdx();
    }

    /**
     * Create an instance of {@link ProcessSignatureAnn }
     * 
     */
    public ProcessSignatureAnn createProcessSignatureAnn() {
        return new ProcessSignatureAnn();
    }

    /**
     * Create an instance of {@link MuAction }
     * 
     */
    public MuAction createMuAction() {
        return new MuAction();
    }

    /**
     * Create an instance of {@link ExtChoiceAction }
     * 
     */
    public ExtChoiceAction createExtChoiceAction() {
        return new ExtChoiceAction();
    }

    /**
     * Create an instance of {@link SkipAction }
     * 
     */
    public SkipAction createSkipAction() {
        return new SkipAction();
    }

    /**
     * Create an instance of {@link SubstitutionAction }
     * 
     */
    public SubstitutionAction createSubstitutionAction() {
        return new SubstitutionAction();
    }

    /**
     * Create an instance of {@link ChannelSetType }
     * 
     */
    public ChannelSetType createChannelSetType() {
        return new ChannelSetType();
    }

    /**
     * Create an instance of {@link CircusNameSet }
     * 
     */
    public CircusNameSet createCircusNameSet() {
        return new CircusNameSet();
    }

    /**
     * Create an instance of {@link IntChoiceAction }
     * 
     */
    public IntChoiceAction createIntChoiceAction() {
        return new IntChoiceAction();
    }

    /**
     * Create an instance of {@link ParamAction }
     * 
     */
    public ParamAction createParamAction() {
        return new ParamAction();
    }

    /**
     * Create an instance of {@link CircusNameSetList }
     * 
     */
    public CircusNameSetList createCircusNameSetList() {
        return new CircusNameSetList();
    }

    /**
     * Create an instance of {@link NameSetList }
     * 
     */
    public NameSetList createNameSetList() {
        return new NameSetList();
    }

    /**
     * Create an instance of {@link ProcessPara }
     * 
     */
    public ProcessPara createProcessPara() {
        return new ProcessPara();
    }

    /**
     * Create an instance of {@link AlphabetisedParallelAction }
     * 
     */
    public AlphabetisedParallelAction createAlphabetisedParallelAction() {
        return new AlphabetisedParallelAction();
    }

    /**
     * Create an instance of {@link BasicChannelSetExpr }
     * 
     */
    public BasicChannelSetExpr createBasicChannelSetExpr() {
        return new BasicChannelSetExpr();
    }

    /**
     * Create an instance of {@link InterleaveProcessIte }
     * 
     */
    public InterleaveProcessIte createInterleaveProcessIte() {
        return new InterleaveProcessIte();
    }

    /**
     * Create an instance of {@link DoGuardedCommand }
     * 
     */
    public DoGuardedCommand createDoGuardedCommand() {
        return new DoGuardedCommand();
    }

    /**
     * Create an instance of {@link GuardedAction }
     * 
     */
    public GuardedAction createGuardedAction() {
        return new GuardedAction();
    }

    /**
     * Create an instance of {@link SeqProcess }
     * 
     */
    public SeqProcess createSeqProcess() {
        return new SeqProcess();
    }

    /**
     * Create an instance of {@link InterruptAction }
     * 
     */
    public InterruptAction createInterruptAction() {
        return new InterruptAction();
    }

    /**
     * Create an instance of {@link AlphabetisedParallelProcessIte }
     * 
     */
    public AlphabetisedParallelProcessIte createAlphabetisedParallelProcessIte() {
        return new AlphabetisedParallelProcessIte();
    }

    /**
     * Create an instance of {@link IntChoiceProcess }
     * 
     */
    public IntChoiceProcess createIntChoiceProcess() {
        return new IntChoiceProcess();
    }

    /**
     * Create an instance of {@link CircusStateAnn }
     * 
     */
    public CircusStateAnn createCircusStateAnn() {
        return new CircusStateAnn();
    }

    /**
     * Create an instance of {@link ParallelActionIte }
     * 
     */
    public ParallelActionIte createParallelActionIte() {
        return new ParallelActionIte();
    }

    /**
     * Create an instance of {@link RenameProcess }
     * 
     */
    public RenameProcess createRenameProcess() {
        return new RenameProcess();
    }

    /**
     * Create an instance of {@link BasicProcess }
     * 
     */
    public BasicProcess createBasicProcess() {
        return new BasicProcess();
    }

    /**
     * Create an instance of {@link RenameAction }
     * 
     */
    public RenameAction createRenameAction() {
        return new RenameAction();
    }

    /**
     * Create an instance of {@link ActionSignature }
     * 
     */
    public ActionSignature createActionSignature() {
        return new ActionSignature();
    }

    /**
     * Create an instance of {@link ChannelPara }
     * 
     */
    public ChannelPara createChannelPara() {
        return new ChannelPara();
    }

    /**
     * Create an instance of {@link ActionTransformerPred }
     * 
     */
    public ActionTransformerPred createActionTransformerPred() {
        return new ActionTransformerPred();
    }

    /**
     * Create an instance of {@link CircusFieldList }
     * 
     */
    public CircusFieldList createCircusFieldList() {
        return new CircusFieldList();
    }

    /**
     * Create an instance of {@link ImplicitChannelAnn }
     * 
     */
    public ImplicitChannelAnn createImplicitChannelAnn() {
        return new ImplicitChannelAnn();
    }

    /**
     * Create an instance of {@link VarDeclCommand }
     * 
     */
    public VarDeclCommand createVarDeclCommand() {
        return new VarDeclCommand();
    }

    /**
     * Create an instance of {@link CommunicationType }
     * 
     */
    public CommunicationType createCommunicationType() {
        return new CommunicationType();
    }

    /**
     * Create an instance of {@link InterleaveActionIte }
     * 
     */
    public InterleaveActionIte createInterleaveActionIte() {
        return new InterleaveActionIte();
    }

    /**
     * Create an instance of {@link DotField }
     * 
     */
    public DotField createDotField() {
        return new DotField();
    }

    /**
     * Create an instance of {@link AlphabetisedParallelProcessIdx }
     * 
     */
    public AlphabetisedParallelProcessIdx createAlphabetisedParallelProcessIdx() {
        return new AlphabetisedParallelProcessIdx();
    }

    /**
     * Create an instance of {@link ChaosAction }
     * 
     */
    public ChaosAction createChaosAction() {
        return new ChaosAction();
    }

    /**
     * Create an instance of {@link AlphabetisedParallelProcess }
     * 
     */
    public AlphabetisedParallelProcess createAlphabetisedParallelProcess() {
        return new AlphabetisedParallelProcess();
    }

    /**
     * Create an instance of {@link AlphabetisedParallelActionIte }
     * 
     */
    public AlphabetisedParallelActionIte createAlphabetisedParallelActionIte() {
        return new AlphabetisedParallelActionIte();
    }

    /**
     * Create an instance of {@link AssignmentPairs }
     * 
     */
    public AssignmentPairs createAssignmentPairs() {
        return new AssignmentPairs();
    }

    /**
     * Create an instance of {@link InterleaveProcess }
     * 
     */
    public InterleaveProcess createInterleaveProcess() {
        return new InterleaveProcess();
    }

    /**
     * Create an instance of {@link ActionSignatureList }
     * 
     */
    public ActionSignatureList createActionSignatureList() {
        return new ActionSignatureList();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ActionType", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusType")
    public JAXBElement<ActionType> createActionType(ActionType value) {
        return new JAXBElement<ActionType>(_ActionType_QNAME, ActionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SeqActionIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SeqActionIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ActionIte")
    public JAXBElement<SeqActionIte> createSeqActionIte(SeqActionIte value) {
        return new JAXBElement<SeqActionIte>(_SeqActionIte_QNAME, SeqActionIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CommunicationList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CommunicationList")
    public JAXBElement<CommunicationList> createCommunicationList(CommunicationList value) {
        return new JAXBElement<CommunicationList>(_CommunicationList_QNAME, CommunicationList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CallAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CallAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAction")
    public JAXBElement<CallAction> createCallAction(CallAction value) {
        return new JAXBElement<CallAction>(_CallAction_QNAME, CallAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessSignatureAnn }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ProcessSignatureAnn", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAnn")
    public JAXBElement<ProcessSignatureAnn> createProcessSignatureAnn(ProcessSignatureAnn value) {
        return new JAXBElement<ProcessSignatureAnn>(_ProcessSignatureAnn_QNAME, ProcessSignatureAnn.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChannelDecl }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ChannelDecl", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Decl")
    public JAXBElement<ChannelDecl> createChannelDecl(ChannelDecl value) {
        return new JAXBElement<ChannelDecl>(_ChannelDecl_QNAME, ChannelDecl.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameSetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "NameSetType", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusSigType")
    public JAXBElement<NameSetType> createNameSetType(NameSetType value) {
        return new JAXBElement<NameSetType>(_NameSetType_QNAME, NameSetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SkipAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SkipAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "BasicAction")
    public JAXBElement<SkipAction> createSkipAction(SkipAction value) {
        return new JAXBElement<SkipAction>(_SkipAction_QNAME, SkipAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChannelSetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ChannelSetType", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusSigType")
    public JAXBElement<ChannelSetType> createChannelSetType(ChannelSetType value) {
        return new JAXBElement<ChannelSetType>(_ChannelSetType_QNAME, ChannelSetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusNameSet }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusNameSet", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "NameSet")
    public JAXBElement<CircusNameSet> createCircusNameSet(CircusNameSet value) {
        return new JAXBElement<CircusNameSet>(_CircusNameSet_QNAME, CircusNameSet.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParamAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParamAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ActionD")
    public JAXBElement<ParamAction> createParamAction(ParamAction value) {
        return new JAXBElement<ParamAction>(_ParamAction_QNAME, ParamAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessPara }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ProcessPara", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Para")
    public JAXBElement<ProcessPara> createProcessPara(ProcessPara value) {
        return new JAXBElement<ProcessPara>(_ProcessPara_QNAME, ProcessPara.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AlphabetisedParallelAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "AlphabetisedParallelAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParAction")
    public JAXBElement<AlphabetisedParallelAction> createAlphabetisedParallelAction(AlphabetisedParallelAction value) {
        return new JAXBElement<AlphabetisedParallelAction>(_AlphabetisedParallelAction_QNAME, AlphabetisedParallelAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusNameSetList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusNameSetList", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "NameSetList")
    public JAXBElement<CircusNameSetList> createCircusNameSetList(CircusNameSetList value) {
        return new JAXBElement<CircusNameSetList>(_CircusNameSetList_QNAME, CircusNameSetList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GuardedAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "GuardedAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action1")
    public JAXBElement<GuardedAction> createGuardedAction(GuardedAction value) {
        return new JAXBElement<GuardedAction>(_GuardedAction_QNAME, GuardedAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TransformerPred }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "TransformerPred", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Pred")
    public JAXBElement<TransformerPred> createTransformerPred(TransformerPred value) {
        return new JAXBElement<TransformerPred>(_TransformerPred_QNAME, TransformerPred.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChannelSet }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ChannelSet")
    public JAXBElement<ChannelSet> createChannelSet(ChannelSet value) {
        return new JAXBElement<ChannelSet>(_ChannelSet_QNAME, ChannelSet.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntChoiceProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "IntChoiceProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Process2")
    public JAXBElement<IntChoiceProcess> createIntChoiceProcess(IntChoiceProcess value) {
        return new JAXBElement<IntChoiceProcess>(_IntChoiceProcess_QNAME, IntChoiceProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AlphabetisedParallelProcessIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "AlphabetisedParallelProcessIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParProcessIte")
    public JAXBElement<AlphabetisedParallelProcessIte> createAlphabetisedParallelProcessIte(AlphabetisedParallelProcessIte value) {
        return new JAXBElement<AlphabetisedParallelProcessIte>(_AlphabetisedParallelProcessIte_QNAME, AlphabetisedParallelProcessIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RenameProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "RenameProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Process1")
    public JAXBElement<RenameProcess> createRenameProcess(RenameProcess value) {
        return new JAXBElement<RenameProcess>(_RenameProcess_QNAME, RenameProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusStateAnn }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusStateAnn", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAnn")
    public JAXBElement<CircusStateAnn> createCircusStateAnn(CircusStateAnn value) {
        return new JAXBElement<CircusStateAnn>(_CircusStateAnn_QNAME, CircusStateAnn.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RenameAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "RenameAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action1")
    public JAXBElement<RenameAction> createRenameAction(RenameAction value) {
        return new JAXBElement<RenameAction>(_RenameAction_QNAME, RenameAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActionSignature }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ActionSignature", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusSignature")
    public JAXBElement<ActionSignature> createActionSignature(ActionSignature value) {
        return new JAXBElement<ActionSignature>(_ActionSignature_QNAME, ActionSignature.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VarDeclCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "VarDeclCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusCommand")
    public JAXBElement<VarDeclCommand> createVarDeclCommand(VarDeclCommand value) {
        return new JAXBElement<VarDeclCommand>(_VarDeclCommand_QNAME, VarDeclCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ImplicitChannelAnn }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ImplicitChannelAnn", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAnn")
    public JAXBElement<ImplicitChannelAnn> createImplicitChannelAnn(ImplicitChannelAnn value) {
        return new JAXBElement<ImplicitChannelAnn>(_ImplicitChannelAnn_QNAME, ImplicitChannelAnn.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AlphabetisedParallelProcessIdx }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "AlphabetisedParallelProcessIdx", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParProcessIdx")
    public JAXBElement<AlphabetisedParallelProcessIdx> createAlphabetisedParallelProcessIdx(AlphabetisedParallelProcessIdx value) {
        return new JAXBElement<AlphabetisedParallelProcessIdx>(_AlphabetisedParallelProcessIdx_QNAME, AlphabetisedParallelProcessIdx.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterleaveActionIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "InterleaveActionIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParActionIte")
    public JAXBElement<InterleaveActionIte> createInterleaveActionIte(InterleaveActionIte value) {
        return new JAXBElement<InterleaveActionIte>(_InterleaveActionIte_QNAME, InterleaveActionIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AlphabetisedParallelProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "AlphabetisedParallelProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParProcess")
    public JAXBElement<AlphabetisedParallelProcess> createAlphabetisedParallelProcess(AlphabetisedParallelProcess value) {
        return new JAXBElement<AlphabetisedParallelProcess>(_AlphabetisedParallelProcess_QNAME, AlphabetisedParallelProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChaosAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ChaosAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "BasicAction")
    public JAXBElement<ChaosAction> createChaosAction(ChaosAction value) {
        return new JAXBElement<ChaosAction>(_ChaosAction_QNAME, ChaosAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AlphabetisedParallelActionIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "AlphabetisedParallelActionIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParActionIte")
    public JAXBElement<AlphabetisedParallelActionIte> createAlphabetisedParallelActionIte(AlphabetisedParallelActionIte value) {
        return new JAXBElement<AlphabetisedParallelActionIte>(_AlphabetisedParallelActionIte_QNAME, AlphabetisedParallelActionIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActionSignatureList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ActionSignatureList", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "SignatureList")
    public JAXBElement<ActionSignatureList> createActionSignatureList(ActionSignatureList value) {
        return new JAXBElement<ActionSignatureList>(_ActionSignatureList_QNAME, ActionSignatureList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AssignmentPairs }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "AssignmentPairs")
    public JAXBElement<AssignmentPairs> createAssignmentPairs(AssignmentPairs value) {
        return new JAXBElement<AssignmentPairs>(_AssignmentPairs_QNAME, AssignmentPairs.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TransformerPara }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "TransformerPara", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusConjPara")
    public JAXBElement<TransformerPara> createTransformerPara(TransformerPara value) {
        return new JAXBElement<TransformerPara>(_TransformerPara_QNAME, TransformerPara.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StateUpdate }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "StateUpdate", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "QntPred")
    public JAXBElement<StateUpdate> createStateUpdate(StateUpdate value) {
        return new JAXBElement<StateUpdate>(_StateUpdate_QNAME, StateUpdate.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SeqProcessIdx }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SeqProcessIdx", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessIdx")
    public JAXBElement<SeqProcessIdx> createSeqProcessIdx(SeqProcessIdx value) {
        return new JAXBElement<SeqProcessIdx>(_SeqProcessIdx_QNAME, SeqProcessIdx.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChannelSetPara }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ChannelSetPara", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Para")
    public JAXBElement<ChannelSetPara> createChannelSetPara(ChannelSetPara value) {
        return new JAXBElement<ChannelSetPara>(_ChannelSetPara_QNAME, ChannelSetPara.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusCommunicationList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusCommunicationList", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CommunicationList")
    public JAXBElement<CircusCommunicationList> createCircusCommunicationList(CircusCommunicationList value) {
        return new JAXBElement<CircusCommunicationList>(_CircusCommunicationList_QNAME, CircusCommunicationList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExtChoiceProcessIdx }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ExtChoiceProcessIdx", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessIdx")
    public JAXBElement<ExtChoiceProcessIdx> createExtChoiceProcessIdx(ExtChoiceProcessIdx value) {
        return new JAXBElement<ExtChoiceProcessIdx>(_ExtChoiceProcessIdx_QNAME, ExtChoiceProcessIdx.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LetAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "LetAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action1")
    public JAXBElement<LetAction> createLetAction(LetAction value) {
        return new JAXBElement<LetAction>(_LetAction_QNAME, LetAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusChannelSetList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusChannelSetList", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ChannelSetList")
    public JAXBElement<CircusChannelSetList> createCircusChannelSetList(CircusChannelSetList value) {
        return new JAXBElement<CircusChannelSetList>(_CircusChannelSetList_QNAME, CircusChannelSetList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParallelAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParallelAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParAction")
    public JAXBElement<ParallelAction> createParallelAction(ParallelAction value) {
        return new JAXBElement<ParallelAction>(_ParallelAction_QNAME, ParallelAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParActionIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParActionIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ActionIte")
    public JAXBElement<ParActionIte> createParActionIte(ParActionIte value) {
        return new JAXBElement<ParActionIte>(_ParActionIte_QNAME, ParActionIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActionIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ActionIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ActionD")
    public JAXBElement<ActionIte> createActionIte(ActionIte value) {
        return new JAXBElement<ActionIte>(_ActionIte_QNAME, ActionIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExtChoiceProcessIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ExtChoiceProcessIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessIte")
    public JAXBElement<ExtChoiceProcessIte> createExtChoiceProcessIte(ExtChoiceProcessIte value) {
        return new JAXBElement<ExtChoiceProcessIte>(_ExtChoiceProcessIte_QNAME, ExtChoiceProcessIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParamProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParamProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessD")
    public JAXBElement<ParamProcess> createParamProcess(ParamProcess value) {
        return new JAXBElement<ParamProcess>(_ParamProcess_QNAME, ParamProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SeqProcessIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SeqProcessIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessIte")
    public JAXBElement<SeqProcessIte> createSeqProcessIte(SeqProcessIte value) {
        return new JAXBElement<SeqProcessIte>(_SeqProcessIte_QNAME, SeqProcessIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActionList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ActionList")
    public JAXBElement<ActionList> createActionList(ActionList value) {
        return new JAXBElement<ActionList>(_ActionList_QNAME, ActionList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Process2")
    public JAXBElement<ParProcess> createParProcess(ParProcess value) {
        return new JAXBElement<ParProcess>(_ParProcess_QNAME, ParProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusSignature }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusSignature")
    public JAXBElement<CircusSignature> createCircusSignature(CircusSignature value) {
        return new JAXBElement<CircusSignature>(_CircusSignature_QNAME, CircusSignature.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExtChoiceActionIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ExtChoiceActionIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ActionIte")
    public JAXBElement<ExtChoiceActionIte> createExtChoiceActionIte(ExtChoiceActionIte value) {
        return new JAXBElement<ExtChoiceActionIte>(_ExtChoiceActionIte_QNAME, ExtChoiceActionIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ProcessType", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusType")
    public JAXBElement<ProcessType> createProcessType(ProcessType value) {
        return new JAXBElement<ProcessType>(_ProcessType_QNAME, ProcessType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IfGuardedCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "IfGuardedCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusGuardedCommand")
    public JAXBElement<IfGuardedCommand> createIfGuardedCommand(IfGuardedCommand value) {
        return new JAXBElement<IfGuardedCommand>(_IfGuardedCommand_QNAME, IfGuardedCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActionD }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ActionD", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action1")
    public JAXBElement<ActionD> createActionD(ActionD value) {
        return new JAXBElement<ActionD>(_ActionD_QNAME, ActionD.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterleaveAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "InterleaveAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParAction")
    public JAXBElement<InterleaveAction> createInterleaveAction(InterleaveAction value) {
        return new JAXBElement<InterleaveAction>(_InterleaveAction_QNAME, InterleaveAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessTransformerPred }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ProcessTransformerPred", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "TransformerPred")
    public JAXBElement<ProcessTransformerPred> createProcessTransformerPred(ProcessTransformerPred value) {
        return new JAXBElement<ProcessTransformerPred>(_ProcessTransformerPred_QNAME, ProcessTransformerPred.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Action1 }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "Action1", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAction")
    public JAXBElement<Action1> createAction1(Action1 value) {
        return new JAXBElement<Action1>(_Action1_QNAME, Action1 .class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InputField }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "InputField", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Field")
    public JAXBElement<InputField> createInputField(InputField value) {
        return new JAXBElement<InputField>(_InputField_QNAME, InputField.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Action2 }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "Action2", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAction")
    public JAXBElement<Action2> createAction2(Action2 value) {
        return new JAXBElement<Action2>(_Action2_QNAME, Action2 .class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BasicAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "BasicAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAction")
    public JAXBElement<BasicAction> createBasicAction(BasicAction value) {
        return new JAXBElement<BasicAction>(_BasicAction_QNAME, BasicAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HideProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "HideProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Process1")
    public JAXBElement<HideProcess> createHideProcess(HideProcess value) {
        return new JAXBElement<HideProcess>(_HideProcess_QNAME, HideProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SeqAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SeqAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action2")
    public JAXBElement<SeqAction> createSeqAction(SeqAction value) {
        return new JAXBElement<SeqAction>(_SeqAction_QNAME, SeqAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExtChoiceProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ExtChoiceProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Process2")
    public JAXBElement<ExtChoiceProcess> createExtChoiceProcess(ExtChoiceProcess value) {
        return new JAXBElement<ExtChoiceProcess>(_ExtChoiceProcess_QNAME, ExtChoiceProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LetMuAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "LetMuAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "LetAction")
    public JAXBElement<LetMuAction> createLetMuAction(LetMuAction value) {
        return new JAXBElement<LetMuAction>(_LetMuAction_QNAME, LetMuAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChannelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ChannelType", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusType")
    public JAXBElement<ChannelType> createChannelType(ChannelType value) {
        return new JAXBElement<ChannelType>(_ChannelType_QNAME, ChannelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntChoiceActionIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "IntChoiceActionIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ActionIte")
    public JAXBElement<IntChoiceActionIte> createIntChoiceActionIte(IntChoiceActionIte value) {
        return new JAXBElement<IntChoiceActionIte>(_IntChoiceActionIte_QNAME, IntChoiceActionIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SpecStmtCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SpecStmtCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusCommand")
    public JAXBElement<SpecStmtCommand> createSpecStmtCommand(SpecStmtCommand value) {
        return new JAXBElement<SpecStmtCommand>(_SpecStmtCommand_QNAME, SpecStmtCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StateUpdateAnn }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "StateUpdateAnn", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAnn")
    public JAXBElement<StateUpdateAnn> createStateUpdateAnn(StateUpdateAnn value) {
        return new JAXBElement<StateUpdateAnn>(_StateUpdateAnn_QNAME, StateUpdateAnn.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterleaveProcessIdx }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "InterleaveProcessIdx", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParProcessIdx")
    public JAXBElement<InterleaveProcessIdx> createInterleaveProcessIdx(InterleaveProcessIdx value) {
        return new JAXBElement<InterleaveProcessIdx>(_InterleaveProcessIdx_QNAME, InterleaveProcessIdx.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MuAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "MuAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action1")
    public JAXBElement<MuAction> createMuAction(MuAction value) {
        return new JAXBElement<MuAction>(_MuAction_QNAME, MuAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExtChoiceAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ExtChoiceAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action2")
    public JAXBElement<ExtChoiceAction> createExtChoiceAction(ExtChoiceAction value) {
        return new JAXBElement<ExtChoiceAction>(_ExtChoiceAction_QNAME, ExtChoiceAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubstitutionAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SubstitutionAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action1")
    public JAXBElement<SubstitutionAction> createSubstitutionAction(SubstitutionAction value) {
        return new JAXBElement<SubstitutionAction>(_SubstitutionAction_QNAME, SubstitutionAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusSigType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusSigType", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusType")
    public JAXBElement<CircusSigType> createCircusSigType(CircusSigType value) {
        return new JAXBElement<CircusSigType>(_CircusSigType_QNAME, CircusSigType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntChoiceAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "IntChoiceAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action2")
    public JAXBElement<IntChoiceAction> createIntChoiceAction(IntChoiceAction value) {
        return new JAXBElement<IntChoiceAction>(_IntChoiceAction_QNAME, IntChoiceAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BasicChannelSetExpr }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "BasicChannelSetExpr", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Expr")
    public JAXBElement<BasicChannelSetExpr> createBasicChannelSetExpr(BasicChannelSetExpr value) {
        return new JAXBElement<BasicChannelSetExpr>(_BasicChannelSetExpr_QNAME, BasicChannelSetExpr.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterleaveProcessIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "InterleaveProcessIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParProcessIte")
    public JAXBElement<InterleaveProcessIte> createInterleaveProcessIte(InterleaveProcessIte value) {
        return new JAXBElement<InterleaveProcessIte>(_InterleaveProcessIte_QNAME, InterleaveProcessIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DoGuardedCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "DoGuardedCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusGuardedCommand")
    public JAXBElement<DoGuardedCommand> createDoGuardedCommand(DoGuardedCommand value) {
        return new JAXBElement<DoGuardedCommand>(_DoGuardedCommand_QNAME, DoGuardedCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAction")
    public JAXBElement<CircusCommand> createCircusCommand(CircusCommand value) {
        return new JAXBElement<CircusCommand>(_CircusCommand_QNAME, CircusCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusAction")
    public JAXBElement<CircusAction> createCircusAction(CircusAction value) {
        return new JAXBElement<CircusAction>(_CircusAction_QNAME, CircusAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SeqProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SeqProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Process2")
    public JAXBElement<SeqProcess> createSeqProcess(SeqProcess value) {
        return new JAXBElement<SeqProcess>(_SeqProcess_QNAME, SeqProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterruptAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "InterruptAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action2")
    public JAXBElement<InterruptAction> createInterruptAction(InterruptAction value) {
        return new JAXBElement<InterruptAction>(_InterruptAction_QNAME, InterruptAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Field }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "Field")
    public JAXBElement<Field> createField(Field value) {
        return new JAXBElement<Field>(_Field_QNAME, Field.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParallelActionIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParallelActionIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParActionIte")
    public JAXBElement<ParallelActionIte> createParallelActionIte(ParallelActionIte value) {
        return new JAXBElement<ParallelActionIte>(_ParallelActionIte_QNAME, ParallelActionIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action2")
    public JAXBElement<ParAction> createParAction(ParAction value) {
        return new JAXBElement<ParAction>(_ParAction_QNAME, ParAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChannelPara }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ChannelPara", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Para")
    public JAXBElement<ChannelPara> createChannelPara(ChannelPara value) {
        return new JAXBElement<ChannelPara>(_ChannelPara_QNAME, ChannelPara.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BasicProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "BasicProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusProcess")
    public JAXBElement<BasicProcess> createBasicProcess(BasicProcess value) {
        return new JAXBElement<BasicProcess>(_BasicProcess_QNAME, BasicProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActionTransformerPred }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ActionTransformerPred", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "TransformerPred")
    public JAXBElement<ActionTransformerPred> createActionTransformerPred(ActionTransformerPred value) {
        return new JAXBElement<ActionTransformerPred>(_ActionTransformerPred_QNAME, ActionTransformerPred.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusFieldList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusFieldList", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "FieldList")
    public JAXBElement<CircusFieldList> createCircusFieldList(CircusFieldList value) {
        return new JAXBElement<CircusFieldList>(_CircusFieldList_QNAME, CircusFieldList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CommunicationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CommunicationType", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusSigType")
    public JAXBElement<CommunicationType> createCommunicationType(CommunicationType value) {
        return new JAXBElement<CommunicationType>(_CommunicationType_QNAME, CommunicationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusAnn }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusAnn", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Ann")
    public JAXBElement<CircusAnn> createCircusAnn(CircusAnn value) {
        return new JAXBElement<CircusAnn>(_CircusAnn_QNAME, CircusAnn.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DotField }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "DotField", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Field")
    public JAXBElement<DotField> createDotField(DotField value) {
        return new JAXBElement<DotField>(_DotField_QNAME, DotField.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameSetList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "NameSetList")
    public JAXBElement<NameSetList> createNameSetList(NameSetList value) {
        return new JAXBElement<NameSetList>(_NameSetList_QNAME, NameSetList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterleaveProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "InterleaveProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParProcess")
    public JAXBElement<InterleaveProcess> createInterleaveProcess(InterleaveProcess value) {
        return new JAXBElement<InterleaveProcess>(_InterleaveProcess_QNAME, InterleaveProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusProcess")
    public JAXBElement<CircusProcess> createCircusProcess(CircusProcess value) {
        return new JAXBElement<CircusProcess>(_CircusProcess_QNAME, CircusProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SignatureList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SignatureList")
    public JAXBElement<SignatureList> createSignatureList(SignatureList value) {
        return new JAXBElement<SignatureList>(_SignatureList_QNAME, SignatureList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProofObligationAnn }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ProofObligationAnn", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAnn")
    public JAXBElement<ProofObligationAnn> createProofObligationAnn(ProofObligationAnn value) {
        return new JAXBElement<ProofObligationAnn>(_ProofObligationAnn_QNAME, ProofObligationAnn.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IndexedProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "IndexedProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessD")
    public JAXBElement<IndexedProcess> createIndexedProcess(IndexedProcess value) {
        return new JAXBElement<IndexedProcess>(_IndexedProcess_QNAME, IndexedProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusChannelSet }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusChannelSet", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ChannelSet")
    public JAXBElement<CircusChannelSet> createCircusChannelSet(CircusChannelSet value) {
        return new JAXBElement<CircusChannelSet>(_CircusChannelSet_QNAME, CircusChannelSet.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessIdx }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ProcessIdx", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessIte")
    public JAXBElement<ProcessIdx> createProcessIdx(ProcessIdx value) {
        return new JAXBElement<ProcessIdx>(_ProcessIdx_QNAME, ProcessIdx.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActionSignatureAnn }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ActionSignatureAnn", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAnn")
    public JAXBElement<ActionSignatureAnn> createActionSignatureAnn(ActionSignatureAnn value) {
        return new JAXBElement<ActionSignatureAnn>(_ActionSignatureAnn_QNAME, ActionSignatureAnn.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParProcessIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParProcessIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessIte")
    public JAXBElement<ParProcessIte> createParProcessIte(ParProcessIte value) {
        return new JAXBElement<ParProcessIte>(_ParProcessIte_QNAME, ParProcessIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessSignatureList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ProcessSignatureList", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "SignatureList")
    public JAXBElement<ProcessSignatureList> createProcessSignatureList(ProcessSignatureList value) {
        return new JAXBElement<ProcessSignatureList>(_ProcessSignatureList_QNAME, ProcessSignatureList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HideAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "HideAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action1")
    public JAXBElement<HideAction> createHideAction(HideAction value) {
        return new JAXBElement<HideAction>(_HideAction_QNAME, HideAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OnTheFlyDefAnn }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "OnTheFlyDefAnn", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAnn")
    public JAXBElement<OnTheFlyDefAnn> createOnTheFlyDefAnn(OnTheFlyDefAnn value) {
        return new JAXBElement<OnTheFlyDefAnn>(_OnTheFlyDefAnn_QNAME, OnTheFlyDefAnn.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParallelProcessIdx }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParallelProcessIdx", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParProcessIdx")
    public JAXBElement<ParallelProcessIdx> createParallelProcessIdx(ParallelProcessIdx value) {
        return new JAXBElement<ParallelProcessIdx>(_ParallelProcessIdx_QNAME, ParallelProcessIdx.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OutputFieldAnn }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "OutputFieldAnn", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAnn")
    public JAXBElement<OutputFieldAnn> createOutputFieldAnn(OutputFieldAnn value) {
        return new JAXBElement<OutputFieldAnn>(_OutputFieldAnn_QNAME, OutputFieldAnn.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessD }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ProcessD", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Process1")
    public JAXBElement<ProcessD> createProcessD(ProcessD value) {
        return new JAXBElement<ProcessD>(_ProcessD_QNAME, ProcessD.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LetVarAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "LetVarAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "LetAction")
    public JAXBElement<LetVarAction> createLetVarAction(LetVarAction value) {
        return new JAXBElement<LetVarAction>(_LetVarAction_QNAME, LetVarAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusGuardedCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusGuardedCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusCommand")
    public JAXBElement<CircusGuardedCommand> createCircusGuardedCommand(CircusGuardedCommand value) {
        return new JAXBElement<CircusGuardedCommand>(_CircusGuardedCommand_QNAME, CircusGuardedCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Process1 }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "Process1", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusProcess")
    public JAXBElement<Process1> createProcess1(Process1 value) {
        return new JAXBElement<Process1>(_Process1_QNAME, Process1 .class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Process2 }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "Process2", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusProcess")
    public JAXBElement<Process2> createProcess2(Process2 value) {
        return new JAXBElement<Process2>(_Process2_QNAME, Process2 .class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ProcessIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessD")
    public JAXBElement<ProcessIte> createProcessIte(ProcessIte value) {
        return new JAXBElement<ProcessIte>(_ProcessIte_QNAME, ProcessIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchExprAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SchExprAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusAction")
    public JAXBElement<SchExprAction> createSchExprAction(SchExprAction value) {
        return new JAXBElement<SchExprAction>(_SchExprAction_QNAME, SchExprAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParallelProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParallelProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParProcess")
    public JAXBElement<ParallelProcess> createParallelProcess(ParallelProcess value) {
        return new JAXBElement<ParallelProcess>(_ParallelProcess_QNAME, ParallelProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameSetPara }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "NameSetPara", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Para")
    public JAXBElement<NameSetPara> createNameSetPara(NameSetPara value) {
        return new JAXBElement<NameSetPara>(_NameSetPara_QNAME, NameSetPara.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParProcessIdx }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParProcessIdx", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessIdx")
    public JAXBElement<ParProcessIdx> createParProcessIdx(ParProcessIdx value) {
        return new JAXBElement<ParProcessIdx>(_ParProcessIdx_QNAME, ParProcessIdx.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StopAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "StopAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "BasicAction")
    public JAXBElement<StopAction> createStopAction(StopAction value) {
        return new JAXBElement<StopAction>(_StopAction_QNAME, StopAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SigmaExpr }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "SigmaExpr", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Expr")
    public JAXBElement<SigmaExpr> createSigmaExpr(SigmaExpr value) {
        return new JAXBElement<SigmaExpr>(_SigmaExpr_QNAME, SigmaExpr.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QualifiedDecl }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "QualifiedDecl", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Decl")
    public JAXBElement<QualifiedDecl> createQualifiedDecl(QualifiedDecl value) {
        return new JAXBElement<QualifiedDecl>(_QualifiedDecl_QNAME, QualifiedDecl.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CallProcess }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CallProcess", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusProcess")
    public JAXBElement<CallProcess> createCallProcess(CallProcess value) {
        return new JAXBElement<CallProcess>(_CallProcess_QNAME, CallProcess.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParallelProcessIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ParallelProcessIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ParProcessIte")
    public JAXBElement<ParallelProcessIte> createParallelProcessIte(ParallelProcessIte value) {
        return new JAXBElement<ParallelProcessIte>(_ParallelProcessIte_QNAME, ParallelProcessIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntChoiceProcessIte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "IntChoiceProcessIte", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessIte")
    public JAXBElement<IntChoiceProcessIte> createIntChoiceProcessIte(IntChoiceProcessIte value) {
        return new JAXBElement<IntChoiceProcessIte>(_IntChoiceProcessIte_QNAME, IntChoiceProcessIte.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusConjPara }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusConjPara", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Para")
    public JAXBElement<CircusConjPara> createCircusConjPara(CircusConjPara value) {
        return new JAXBElement<CircusConjPara>(_CircusConjPara_QNAME, CircusConjPara.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessSignature }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ProcessSignature", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusSignature")
    public JAXBElement<ProcessSignature> createProcessSignature(ProcessSignature value) {
        return new JAXBElement<ProcessSignature>(_ProcessSignature_QNAME, ProcessSignature.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FieldList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "FieldList")
    public JAXBElement<FieldList> createFieldList(FieldList value) {
        return new JAXBElement<FieldList>(_FieldList_QNAME, FieldList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusType", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Type2")
    public JAXBElement<CircusType> createCircusType(CircusType value) {
        return new JAXBElement<CircusType>(_CircusType_QNAME, CircusType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChannelSetList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ChannelSetList")
    public JAXBElement<ChannelSetList> createChannelSetList(ChannelSetList value) {
        return new JAXBElement<ChannelSetList>(_ChannelSetList_QNAME, ChannelSetList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PrefixingAction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "PrefixingAction", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "Action1")
    public JAXBElement<PrefixingAction> createPrefixingAction(PrefixingAction value) {
        return new JAXBElement<PrefixingAction>(_PrefixingAction_QNAME, PrefixingAction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Communication }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "Communication")
    public JAXBElement<Communication> createCommunication(Communication value) {
        return new JAXBElement<Communication>(_Communication_QNAME, Communication.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircusActionList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "CircusActionList", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ActionList")
    public JAXBElement<CircusActionList> createCircusActionList(CircusActionList value) {
        return new JAXBElement<CircusActionList>(_CircusActionList_QNAME, CircusActionList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntChoiceProcessIdx }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "IntChoiceProcessIdx", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "ProcessIdx")
    public JAXBElement<IntChoiceProcessIdx> createIntChoiceProcessIdx(IntChoiceProcessIdx value) {
        return new JAXBElement<IntChoiceProcessIdx>(_IntChoiceProcessIdx_QNAME, IntChoiceProcessIdx.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActionPara }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ActionPara", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Para")
    public JAXBElement<ActionPara> createActionPara(ActionPara value) {
        return new JAXBElement<ActionPara>(_ActionPara_QNAME, ActionPara.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameSet }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "NameSet")
    public JAXBElement<NameSet> createNameSet(NameSet value) {
        return new JAXBElement<NameSet>(_NameSet_QNAME, NameSet.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ZSignatureList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "ZSignatureList", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "SignatureList")
    public JAXBElement<ZSignatureList> createZSignatureList(ZSignatureList value) {
        return new JAXBElement<ZSignatureList>(_ZSignatureList_QNAME, ZSignatureList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AssignmentCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/circus", name = "AssignmentCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/circus", substitutionHeadName = "CircusCommand")
    public JAXBElement<AssignmentCommand> createAssignmentCommand(AssignmentCommand value) {
        return new JAXBElement<AssignmentCommand>(_AssignmentCommand_QNAME, AssignmentCommand.class, null, value);
    }

}
