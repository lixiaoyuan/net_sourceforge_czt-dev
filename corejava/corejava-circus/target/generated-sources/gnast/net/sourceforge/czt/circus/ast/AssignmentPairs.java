
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE AstInterface.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005, 2006, 2007 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.circus.ast;

																																																				

/**
 * Encapsulates two lists used for assignments.
        <p>
          Syntactically, that corresponds to either channels in <code>RenameProcess</code>,
          or to variables in an assignment command. Semantically, it is also used to determine
          which (process) state variables were updated, and in which order.
        </p>
        <p>
          It represents two lists of equal size for the left and right hand sides. 
          Moreover, for <code>RenameProcess</code>, the RHS list can only contain 
          <code>RefExpr</code>, as channels might have generic actuals.
          For state updates, the RHS may be a predicate, in which case it is given as
          an SchExpr to operate upon the process state.
        </p>
 *
 * @author GnAST version 1.6-cdh
 */ 
 



public interface AssignmentPairs extends   		net.sourceforge.czt.base.ast.Term
			{

  /**
   * Returns the LHS element.
   *
   * @return the LHS element.
   */
  net.sourceforge.czt.z.ast.NameList getLHS();


  /**
   * Sets the LHS element.
   *
   * @param lHS   the LHS element.
   * @see #getLHS
   */
  void setLHS(net.sourceforge.czt.z.ast.NameList lHS);

  /**
   * Returns the RHS element.
   *
   * @return the RHS element.
   */
  net.sourceforge.czt.z.ast.ExprList getRHS();


  /**
   * Sets the RHS element.
   *
   * @param rHS   the RHS element.
   * @see #getRHS
   */
  void setRHS(net.sourceforge.czt.z.ast.ExprList rHS);
  /**
   * This is a convenience method.
   * It returns the ZNameList if NameList (LHS) is an instance of
   * ZNameList and throws an UnsupportedAstClassException otherwise.
   */
  net.sourceforge.czt.z.ast.ZNameList getZLHS();

  /**
   * This is a convenience method.
   * It returns the ZExprList if ExprList (RHS) is an instance of
   * ZExprList and throws an UnsupportedAstClassException otherwise.
   */
  net.sourceforge.czt.z.ast.ZExprList getZRHS();
}
