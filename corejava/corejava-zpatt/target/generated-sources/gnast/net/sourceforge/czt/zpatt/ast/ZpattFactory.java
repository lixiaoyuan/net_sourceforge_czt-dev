
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE CoreFactory.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005, 2006, 2007 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.zpatt.ast;


/**
 * <p>The object factory for the AST.
 * This interface contains factory methods
 * for each concrete Z term.</p>
 *
 * <p>This object factory allows the programmer to programatically
 * construct new instances of concrete Z terms.
 * There is a factory method that does not require arguments
 * (called default factory method)
 * and a factory method where all the children (except annotations)
 * of that particular Z term can be provided.</p>
 *
 * @author GnAST version 1.6-cdh
 */
public interface ZpattFactory
  extends net.sourceforge.czt.z.ast.ZFactory
{
  /**
   * Creates an instance of {@link JokerNameList}.
   *
   * @return the new instance of JokerNameList.
   */
  net.sourceforge.czt.zpatt.ast.JokerNameList createJokerNameList();

  /**
   * Creates an instance of {@link JokerNameList} with the given children.
   *
   * @return the new instance of JokerNameList.
   */
  net.sourceforge.czt.zpatt.ast.JokerNameList createJokerNameList( String  name, String  id);

  /**
   * Creates an instance of {@link JokerDeclList}.
   *
   * @return the new instance of JokerDeclList.
   */
  net.sourceforge.czt.zpatt.ast.JokerDeclList createJokerDeclList();

  /**
   * Creates an instance of {@link JokerDeclList} with the given children.
   *
   * @return the new instance of JokerDeclList.
   */
  net.sourceforge.czt.zpatt.ast.JokerDeclList createJokerDeclList( String  name, String  id);

  /**
   * Creates an instance of {@link JokerNameListBinding}.
   *
   * @return the new instance of JokerNameListBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerNameListBinding createJokerNameListBinding();

  /**
   * Creates an instance of {@link JokerNameListBinding} with the given children.
   *
   * @return the new instance of JokerNameListBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerNameListBinding createJokerNameListBinding( net.sourceforge.czt.zpatt.ast.JokerNameList  jokerNameList, net.sourceforge.czt.z.ast.NameList  nameList);

  /**
   * Creates an instance of {@link JokerExprListBinding}.
   *
   * @return the new instance of JokerExprListBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerExprListBinding createJokerExprListBinding();

  /**
   * Creates an instance of {@link JokerExprListBinding} with the given children.
   *
   * @return the new instance of JokerExprListBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerExprListBinding createJokerExprListBinding( net.sourceforge.czt.zpatt.ast.JokerExprList  jokerExprList, net.sourceforge.czt.z.ast.ExprList  exprList);

  /**
   * Creates an instance of {@link JokerExpr}.
   *
   * @return the new instance of JokerExpr.
   */
  net.sourceforge.czt.zpatt.ast.JokerExpr createJokerExpr();

  /**
   * Creates an instance of {@link JokerExpr} with the given children.
   *
   * @return the new instance of JokerExpr.
   */
  net.sourceforge.czt.zpatt.ast.JokerExpr createJokerExpr( String  name, String  id);

  /**
   * Creates an instance of {@link JokerStroke}.
   *
   * @return the new instance of JokerStroke.
   */
  net.sourceforge.czt.zpatt.ast.JokerStroke createJokerStroke();

  /**
   * Creates an instance of {@link JokerStroke} with the given children.
   *
   * @return the new instance of JokerStroke.
   */
  net.sourceforge.czt.zpatt.ast.JokerStroke createJokerStroke( String  name, String  id);

  /**
   * Creates an instance of {@link OracleAppl}.
   *
   * @return the new instance of OracleAppl.
   */
  net.sourceforge.czt.zpatt.ast.OracleAppl createOracleAppl();

  /**
   * Creates an instance of {@link OracleAppl} with the given children.
   *
   * @return the new instance of OracleAppl.
   */
  net.sourceforge.czt.zpatt.ast.OracleAppl createOracleAppl(java.util.List<? extends net.sourceforge.czt.zpatt.ast.Binding>
 binding, net.sourceforge.czt.zpatt.ast.OracleAnswer  oracleAnswer, String  name);

  /**
   * Creates an instance of {@link JokerRenameListBinding}.
   *
   * @return the new instance of JokerRenameListBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerRenameListBinding createJokerRenameListBinding();

  /**
   * Creates an instance of {@link JokerRenameListBinding} with the given children.
   *
   * @return the new instance of JokerRenameListBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerRenameListBinding createJokerRenameListBinding( net.sourceforge.czt.zpatt.ast.JokerRenameList  jokerRenameList, net.sourceforge.czt.z.ast.RenameList  renameList);

  /**
   * Creates an instance of {@link Jokers}.
   *
   * @return the new instance of Jokers.
   */
  net.sourceforge.czt.zpatt.ast.Jokers createJokers();

  /**
   * Creates an instance of {@link Jokers} with the given children.
   *
   * @return the new instance of Jokers.
   */
  net.sourceforge.czt.zpatt.ast.Jokers createJokers(java.util.List<? extends String>
 name,net.sourceforge.czt.zpatt.ast.JokerType
 jokerType);

  /**
   * Creates an instance of {@link JokerName}.
   *
   * @return the new instance of JokerName.
   */
  net.sourceforge.czt.zpatt.ast.JokerName createJokerName();

  /**
   * Creates an instance of {@link JokerName} with the given children.
   *
   * @return the new instance of JokerName.
   */
  net.sourceforge.czt.zpatt.ast.JokerName createJokerName( String  name, String  id);

  /**
   * Creates an instance of {@link SequentList}.
   *
   * @return the new instance of SequentList.
   */
  net.sourceforge.czt.zpatt.ast.SequentList createSequentList();

  /**
   * Creates an instance of {@link SequentList} with the given children.
   *
   * @return the new instance of SequentList.
   */
  net.sourceforge.czt.zpatt.ast.SequentList createSequentList(java.util.List<? extends net.sourceforge.czt.zpatt.ast.Sequent>
 sequent);

  /**
   * Creates an instance of {@link Oracle}.
   *
   * @return the new instance of Oracle.
   */
  net.sourceforge.czt.zpatt.ast.Oracle createOracle();

  /**
   * Creates an instance of {@link Oracle} with the given children.
   *
   * @return the new instance of Oracle.
   */
  net.sourceforge.czt.zpatt.ast.Oracle createOracle( net.sourceforge.czt.zpatt.ast.Sequent  sequent, String  name);

  /**
   * Creates an instance of {@link HeadDeclList}.
   *
   * @return the new instance of HeadDeclList.
   */
  net.sourceforge.czt.zpatt.ast.HeadDeclList createHeadDeclList();

  /**
   * Creates an instance of {@link HeadDeclList} with the given children.
   *
   * @return the new instance of HeadDeclList.
   */
  net.sourceforge.czt.zpatt.ast.HeadDeclList createHeadDeclList( net.sourceforge.czt.z.ast.ZDeclList  zDeclList, net.sourceforge.czt.zpatt.ast.JokerDeclList  jokerDeclList);

  /**
   * Creates an instance of {@link JokerStrokeBinding}.
   *
   * @return the new instance of JokerStrokeBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerStrokeBinding createJokerStrokeBinding();

  /**
   * Creates an instance of {@link JokerStrokeBinding} with the given children.
   *
   * @return the new instance of JokerStrokeBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerStrokeBinding createJokerStrokeBinding( net.sourceforge.czt.zpatt.ast.JokerStroke  jokerStroke, net.sourceforge.czt.z.ast.Stroke  stroke);

  /**
   * Creates an instance of {@link JokerPredBinding}.
   *
   * @return the new instance of JokerPredBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerPredBinding createJokerPredBinding();

  /**
   * Creates an instance of {@link JokerPredBinding} with the given children.
   *
   * @return the new instance of JokerPredBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerPredBinding createJokerPredBinding( net.sourceforge.czt.zpatt.ast.JokerPred  jokerPred, net.sourceforge.czt.z.ast.Pred  pred);

  /**
   * Creates an instance of {@link JokerExprBinding}.
   *
   * @return the new instance of JokerExprBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerExprBinding createJokerExprBinding();

  /**
   * Creates an instance of {@link JokerExprBinding} with the given children.
   *
   * @return the new instance of JokerExprBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerExprBinding createJokerExprBinding( net.sourceforge.czt.zpatt.ast.JokerExpr  jokerExpr, net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link JokerNameBinding}.
   *
   * @return the new instance of JokerNameBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerNameBinding createJokerNameBinding();

  /**
   * Creates an instance of {@link JokerNameBinding} with the given children.
   *
   * @return the new instance of JokerNameBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerNameBinding createJokerNameBinding( net.sourceforge.czt.zpatt.ast.JokerName  jokerName, net.sourceforge.czt.z.ast.Name  name);

  /**
   * Creates an instance of {@link CheckPassed}.
   *
   * @return the new instance of CheckPassed.
   */
  net.sourceforge.czt.zpatt.ast.CheckPassed createCheckPassed();

  /**
   * Creates an instance of {@link CheckPassed} with the given children.
   *
   * @return the new instance of CheckPassed.
   */
  net.sourceforge.czt.zpatt.ast.CheckPassed createCheckPassed(java.util.List<? extends net.sourceforge.czt.zpatt.ast.Binding>
 binding);

  /**
   * Creates an instance of {@link JokerRenameList}.
   *
   * @return the new instance of JokerRenameList.
   */
  net.sourceforge.czt.zpatt.ast.JokerRenameList createJokerRenameList();

  /**
   * Creates an instance of {@link JokerRenameList} with the given children.
   *
   * @return the new instance of JokerRenameList.
   */
  net.sourceforge.czt.zpatt.ast.JokerRenameList createJokerRenameList( String  name, String  id);

  /**
   * Creates an instance of {@link JokerExprList}.
   *
   * @return the new instance of JokerExprList.
   */
  net.sourceforge.czt.zpatt.ast.JokerExprList createJokerExprList();

  /**
   * Creates an instance of {@link JokerExprList} with the given children.
   *
   * @return the new instance of JokerExprList.
   */
  net.sourceforge.czt.zpatt.ast.JokerExprList createJokerExprList( String  name, String  id);

  /**
   * Creates an instance of {@link RuleAppl}.
   *
   * @return the new instance of RuleAppl.
   */
  net.sourceforge.czt.zpatt.ast.RuleAppl createRuleAppl();

  /**
   * Creates an instance of {@link RuleAppl} with the given children.
   *
   * @return the new instance of RuleAppl.
   */
  net.sourceforge.czt.zpatt.ast.RuleAppl createRuleAppl(java.util.List<? extends net.sourceforge.czt.zpatt.ast.Binding>
 binding, net.sourceforge.czt.zpatt.ast.SequentList  sequentList, String  name);

  /**
   * Creates an instance of {@link Sequent}.
   *
   * @return the new instance of Sequent.
   */
  net.sourceforge.czt.zpatt.ast.Sequent createSequent();

  /**
   * Creates an instance of {@link Sequent} with the given children.
   *
   * @return the new instance of Sequent.
   */
  net.sourceforge.czt.zpatt.ast.Sequent createSequent( net.sourceforge.czt.zpatt.ast.SequentContext  sequentContext, net.sourceforge.czt.z.ast.Pred  pred);

  /**
   * Creates an instance of {@link SequentContext}.
   *
   * @return the new instance of SequentContext.
   */
  net.sourceforge.czt.zpatt.ast.SequentContext createSequentContext();

  /**
   * Creates an instance of {@link Rule}.
   *
   * @return the new instance of Rule.
   */
  net.sourceforge.czt.zpatt.ast.Rule createRule();

  /**
   * Creates an instance of {@link Rule} with the given children.
   *
   * @return the new instance of Rule.
   */
  net.sourceforge.czt.zpatt.ast.Rule createRule( net.sourceforge.czt.zpatt.ast.Sequent  sequent, String  name, net.sourceforge.czt.zpatt.ast.SequentList  premisses);

  /**
   * Creates an instance of {@link JokerDeclListBinding}.
   *
   * @return the new instance of JokerDeclListBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerDeclListBinding createJokerDeclListBinding();

  /**
   * Creates an instance of {@link JokerDeclListBinding} with the given children.
   *
   * @return the new instance of JokerDeclListBinding.
   */
  net.sourceforge.czt.zpatt.ast.JokerDeclListBinding createJokerDeclListBinding( net.sourceforge.czt.zpatt.ast.JokerDeclList  jokerDeclList, net.sourceforge.czt.z.ast.DeclList  declList);

  /**
   * Creates an instance of {@link JokerPred}.
   *
   * @return the new instance of JokerPred.
   */
  net.sourceforge.czt.zpatt.ast.JokerPred createJokerPred();

  /**
   * Creates an instance of {@link JokerPred} with the given children.
   *
   * @return the new instance of JokerPred.
   */
  net.sourceforge.czt.zpatt.ast.JokerPred createJokerPred( String  name, String  id);

}
