//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.10.18 at 08:37:58 AM UTC 
//


package net.sourceforge.czt.z.jaxb.gen;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for QntPred complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="QntPred">
 *   &lt;complexContent>
 *     &lt;extension base="{http://czt.sourceforge.net/zml}Pred">
 *       &lt;sequence>
 *         &lt;element ref="{http://czt.sourceforge.net/zml}SchText"/>
 *         &lt;element ref="{http://czt.sourceforge.net/zml}Pred"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "QntPred", propOrder = {
    "schText",
    "pred"
})
@XmlSeeAlso({
    ForallPred.class,
    Exists1Pred.class,
    ExistsPred.class
})
public class QntPred
    extends Pred
{

    @XmlElementRef(name = "SchText", namespace = "http://czt.sourceforge.net/zml", type = JAXBElement.class)
    protected JAXBElement<? extends SchText> schText;
    @XmlElementRef(name = "Pred", namespace = "http://czt.sourceforge.net/zml", type = JAXBElement.class)
    protected JAXBElement<? extends Pred> pred;

    /**
     * Gets the value of the schText property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link SchText }{@code >}
     *     {@link JAXBElement }{@code <}{@link ZSchText }{@code >}
     *     
     */
    public JAXBElement<? extends SchText> getSchText() {
        return schText;
    }

    /**
     * Sets the value of the schText property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link SchText }{@code >}
     *     {@link JAXBElement }{@code <}{@link ZSchText }{@code >}
     *     
     */
    public void setSchText(JAXBElement<? extends SchText> value) {
        this.schText = value;
    }

    /**
     * Gets the value of the pred property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link Pred2 }{@code >}
     *     {@link JAXBElement }{@code <}{@link AndPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link QntPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link MemPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link ImpliesPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link FalsePred }{@code >}
     *     {@link JAXBElement }{@code <}{@link TruePred }{@code >}
     *     {@link JAXBElement }{@code <}{@link Pred }{@code >}
     *     {@link JAXBElement }{@code <}{@link ExistsPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link IffPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link Fact }{@code >}
     *     {@link JAXBElement }{@code <}{@link Exists1Pred }{@code >}
     *     {@link JAXBElement }{@code <}{@link NegPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link ExprPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link ForallPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link OrPred }{@code >}
     *     
     */
    public JAXBElement<? extends Pred> getPred() {
        return pred;
    }

    /**
     * Sets the value of the pred property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link Pred2 }{@code >}
     *     {@link JAXBElement }{@code <}{@link AndPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link QntPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link MemPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link ImpliesPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link FalsePred }{@code >}
     *     {@link JAXBElement }{@code <}{@link TruePred }{@code >}
     *     {@link JAXBElement }{@code <}{@link Pred }{@code >}
     *     {@link JAXBElement }{@code <}{@link ExistsPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link IffPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link Fact }{@code >}
     *     {@link JAXBElement }{@code <}{@link Exists1Pred }{@code >}
     *     {@link JAXBElement }{@code <}{@link NegPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link ExprPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link ForallPred }{@code >}
     *     {@link JAXBElement }{@code <}{@link OrPred }{@code >}
     *     
     */
    public void setPred(JAXBElement<? extends Pred> value) {
        this.pred = value;
    }

}
