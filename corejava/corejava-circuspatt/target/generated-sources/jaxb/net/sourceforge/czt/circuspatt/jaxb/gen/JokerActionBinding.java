//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.10.18 at 08:39:07 AM UTC 
//


package net.sourceforge.czt.circuspatt.jaxb.gen;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import net.sourceforge.czt.circus.jaxb.gen.Action1;
import net.sourceforge.czt.circus.jaxb.gen.Action2;
import net.sourceforge.czt.circus.jaxb.gen.ActionD;
import net.sourceforge.czt.circus.jaxb.gen.ActionIte;
import net.sourceforge.czt.circus.jaxb.gen.AlphabetisedParallelAction;
import net.sourceforge.czt.circus.jaxb.gen.AlphabetisedParallelActionIte;
import net.sourceforge.czt.circus.jaxb.gen.AssignmentCommand;
import net.sourceforge.czt.circus.jaxb.gen.BasicAction;
import net.sourceforge.czt.circus.jaxb.gen.CallAction;
import net.sourceforge.czt.circus.jaxb.gen.ChaosAction;
import net.sourceforge.czt.circus.jaxb.gen.CircusAction;
import net.sourceforge.czt.circus.jaxb.gen.CircusCommand;
import net.sourceforge.czt.circus.jaxb.gen.CircusGuardedCommand;
import net.sourceforge.czt.circus.jaxb.gen.DoGuardedCommand;
import net.sourceforge.czt.circus.jaxb.gen.ExtChoiceAction;
import net.sourceforge.czt.circus.jaxb.gen.ExtChoiceActionIte;
import net.sourceforge.czt.circus.jaxb.gen.GuardedAction;
import net.sourceforge.czt.circus.jaxb.gen.HideAction;
import net.sourceforge.czt.circus.jaxb.gen.IfGuardedCommand;
import net.sourceforge.czt.circus.jaxb.gen.IntChoiceAction;
import net.sourceforge.czt.circus.jaxb.gen.IntChoiceActionIte;
import net.sourceforge.czt.circus.jaxb.gen.InterleaveAction;
import net.sourceforge.czt.circus.jaxb.gen.InterleaveActionIte;
import net.sourceforge.czt.circus.jaxb.gen.InterruptAction;
import net.sourceforge.czt.circus.jaxb.gen.LetAction;
import net.sourceforge.czt.circus.jaxb.gen.LetMuAction;
import net.sourceforge.czt.circus.jaxb.gen.LetVarAction;
import net.sourceforge.czt.circus.jaxb.gen.MuAction;
import net.sourceforge.czt.circus.jaxb.gen.ParAction;
import net.sourceforge.czt.circus.jaxb.gen.ParActionIte;
import net.sourceforge.czt.circus.jaxb.gen.ParallelAction;
import net.sourceforge.czt.circus.jaxb.gen.ParallelActionIte;
import net.sourceforge.czt.circus.jaxb.gen.ParamAction;
import net.sourceforge.czt.circus.jaxb.gen.PrefixingAction;
import net.sourceforge.czt.circus.jaxb.gen.RenameAction;
import net.sourceforge.czt.circus.jaxb.gen.SchExprAction;
import net.sourceforge.czt.circus.jaxb.gen.SeqAction;
import net.sourceforge.czt.circus.jaxb.gen.SeqActionIte;
import net.sourceforge.czt.circus.jaxb.gen.SkipAction;
import net.sourceforge.czt.circus.jaxb.gen.SpecStmtCommand;
import net.sourceforge.czt.circus.jaxb.gen.StopAction;
import net.sourceforge.czt.circus.jaxb.gen.SubstitutionAction;
import net.sourceforge.czt.circus.jaxb.gen.VarDeclCommand;
import net.sourceforge.czt.zpatt.jaxb.gen.Binding;


/**
 * <p>Java class for JokerActionBinding complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="JokerActionBinding">
 *   &lt;complexContent>
 *     &lt;extension base="{http://czt.sourceforge.net/zpatt}Binding">
 *       &lt;sequence>
 *         &lt;element ref="{http://czt.sourceforge.net/circuspatt}JokerAction"/>
 *         &lt;element ref="{http://czt.sourceforge.net/circus}CircusAction"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "JokerActionBinding", propOrder = {
    "jokerAction",
    "circusAction"
})
public class JokerActionBinding
    extends Binding
{

    @XmlElementRef(name = "JokerAction", namespace = "http://czt.sourceforge.net/circuspatt", type = JAXBElement.class)
    protected JAXBElement<JokerAction> jokerAction;
    @XmlElementRef(name = "CircusAction", namespace = "http://czt.sourceforge.net/circus", type = JAXBElement.class)
    protected JAXBElement<? extends CircusAction> circusAction;

    /**
     * Gets the value of the jokerAction property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link JokerAction }{@code >}
     *     
     */
    public JAXBElement<JokerAction> getJokerAction() {
        return jokerAction;
    }

    /**
     * Sets the value of the jokerAction property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link JokerAction }{@code >}
     *     
     */
    public void setJokerAction(JAXBElement<JokerAction> value) {
        this.jokerAction = value;
    }

    /**
     * Gets the value of the circusAction property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link MuAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link SkipAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ParActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link IntChoiceAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link LetVarAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ExtChoiceAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link StopAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link AssignmentCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link RenameAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ExtChoiceActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link ParAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link InterleaveAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link PrefixingAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link CircusGuardedCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link SchExprAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link CallAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link CircusAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ParallelActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link VarDeclCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link JokerAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link IfGuardedCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link ChaosAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link LetMuAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link SeqAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link InterruptAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link Action1 }{@code >}
     *     {@link JAXBElement }{@code <}{@link LetAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link InterleaveActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link IntChoiceActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link DoGuardedCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link SpecStmtCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link ParamAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link BasicAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link HideAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ActionD }{@code >}
     *     {@link JAXBElement }{@code <}{@link SubstitutionAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link AlphabetisedParallelActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link GuardedAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link Action2 }{@code >}
     *     {@link JAXBElement }{@code <}{@link AlphabetisedParallelAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link SeqActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link ParallelAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link CircusCommand }{@code >}
     *     
     */
    public JAXBElement<? extends CircusAction> getCircusAction() {
        return circusAction;
    }

    /**
     * Sets the value of the circusAction property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link MuAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link SkipAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ParActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link IntChoiceAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link LetVarAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ExtChoiceAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link StopAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link AssignmentCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link RenameAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ExtChoiceActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link ParAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link InterleaveAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link PrefixingAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link CircusGuardedCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link SchExprAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link CallAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link CircusAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ParallelActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link VarDeclCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link JokerAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link IfGuardedCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link ChaosAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link LetMuAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link SeqAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link InterruptAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link Action1 }{@code >}
     *     {@link JAXBElement }{@code <}{@link LetAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link InterleaveActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link IntChoiceActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link DoGuardedCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link SpecStmtCommand }{@code >}
     *     {@link JAXBElement }{@code <}{@link ParamAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link BasicAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link HideAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link ActionD }{@code >}
     *     {@link JAXBElement }{@code <}{@link SubstitutionAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link AlphabetisedParallelActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link GuardedAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link Action2 }{@code >}
     *     {@link JAXBElement }{@code <}{@link AlphabetisedParallelAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link SeqActionIte }{@code >}
     *     {@link JAXBElement }{@code <}{@link ParallelAction }{@code >}
     *     {@link JAXBElement }{@code <}{@link CircusCommand }{@code >}
     *     
     */
    public void setCircusAction(JAXBElement<? extends CircusAction> value) {
        this.circusAction = value;
    }

}
