
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE CoreFactoryImpl.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005, 2006, 2007 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.circuspatt.impl;


/**
 * <p>An implementation of the object factory for constructing
 * concrete Z terms.  Each factory method returns an instance
 * of the corresponding class provided in this package.</p>
 *
 * @author GnAST version 1.6-cdh
 */
public class CircusPatternFactoryImpl
  extends net.sourceforge.czt.circus.impl.CircusFactoryImpl
  implements net.sourceforge.czt.circuspatt.ast.CircusPatternFactory
{
  protected CircusPatternFactoryImpl(net.sourceforge.czt.util.Visitor<String> toStringVisitor)
  {
    super(toStringVisitor);
  }

  public CircusPatternFactoryImpl()
  {
    super(new net.sourceforge.czt.circuspatt.util.PrintVisitor());
  }

  public net.sourceforge.czt.circuspatt.ast.JokerCommunicationBinding createJokerCommunicationBinding()
  {
    net.sourceforge.czt.circuspatt.ast.JokerCommunicationBinding zedObject = new net.sourceforge.czt.circuspatt.impl.JokerCommunicationBindingImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerCommunicationBinding createJokerCommunicationBinding( net.sourceforge.czt.circuspatt.ast.JokerCommunication  jokerCommunication, net.sourceforge.czt.circus.ast.Communication  communication)
  {
    net.sourceforge.czt.circuspatt.ast.JokerCommunicationBinding zedObject = createJokerCommunicationBinding();
    zedObject.setJokerCommunication(jokerCommunication);
    zedObject.setCommunication(communication);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerChannelSetBinding createJokerChannelSetBinding()
  {
    net.sourceforge.czt.circuspatt.ast.JokerChannelSetBinding zedObject = new net.sourceforge.czt.circuspatt.impl.JokerChannelSetBindingImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerChannelSetBinding createJokerChannelSetBinding( net.sourceforge.czt.circuspatt.ast.JokerChannelSet  jokerChannelSet, net.sourceforge.czt.circus.ast.ChannelSet  channelSet)
  {
    net.sourceforge.czt.circuspatt.ast.JokerChannelSetBinding zedObject = createJokerChannelSetBinding();
    zedObject.setJokerChannelSet(jokerChannelSet);
    zedObject.setChannelSet(channelSet);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerCommunication createJokerCommunication()
  {
    net.sourceforge.czt.circuspatt.ast.JokerCommunication zedObject = new net.sourceforge.czt.circuspatt.impl.JokerCommunicationImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerCommunication createJokerCommunication( net.sourceforge.czt.z.ast.RefExpr  channelExpr, net.sourceforge.czt.circus.ast.FieldList  fieldList,net.sourceforge.czt.circus.ast.CommUsage
 commUsage,net.sourceforge.czt.circus.ast.CommPattern
 commPattern, java.math.BigInteger  multiSych, Boolean  indexed, String  name, String  id)
  {
    net.sourceforge.czt.circuspatt.ast.JokerCommunication zedObject = createJokerCommunication();
    zedObject.setChannelExpr(channelExpr);
    zedObject.setFieldList(fieldList);
    zedObject.setCommUsage(commUsage);
    zedObject.setCommPattern(commPattern);
    zedObject.setMultiSych(multiSych);
    zedObject.setIndexed(indexed);
    zedObject.setName(name);
    zedObject.setId(id);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerProcessBinding createJokerProcessBinding()
  {
    net.sourceforge.czt.circuspatt.ast.JokerProcessBinding zedObject = new net.sourceforge.czt.circuspatt.impl.JokerProcessBindingImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerProcessBinding createJokerProcessBinding( net.sourceforge.czt.circuspatt.ast.JokerProcess  jokerProcess, net.sourceforge.czt.circus.ast.CircusProcess  circusProcess)
  {
    net.sourceforge.czt.circuspatt.ast.JokerProcessBinding zedObject = createJokerProcessBinding();
    zedObject.setJokerProcess(jokerProcess);
    zedObject.setCircusProcess(circusProcess);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerNameSet createJokerNameSet()
  {
    net.sourceforge.czt.circuspatt.ast.JokerNameSet zedObject = new net.sourceforge.czt.circuspatt.impl.JokerNameSetImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerNameSet createJokerNameSet( String  name, String  id)
  {
    net.sourceforge.czt.circuspatt.ast.JokerNameSet zedObject = createJokerNameSet();
    zedObject.setName(name);
    zedObject.setId(id);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerActionBinding createJokerActionBinding()
  {
    net.sourceforge.czt.circuspatt.ast.JokerActionBinding zedObject = new net.sourceforge.czt.circuspatt.impl.JokerActionBindingImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerActionBinding createJokerActionBinding( net.sourceforge.czt.circuspatt.ast.JokerAction  jokerAction, net.sourceforge.czt.circus.ast.CircusAction  circusAction)
  {
    net.sourceforge.czt.circuspatt.ast.JokerActionBinding zedObject = createJokerActionBinding();
    zedObject.setJokerAction(jokerAction);
    zedObject.setCircusAction(circusAction);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerAction createJokerAction()
  {
    net.sourceforge.czt.circuspatt.ast.JokerAction zedObject = new net.sourceforge.czt.circuspatt.impl.JokerActionImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerAction createJokerAction( String  name, String  id)
  {
    net.sourceforge.czt.circuspatt.ast.JokerAction zedObject = createJokerAction();
    zedObject.setName(name);
    zedObject.setId(id);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerChannelSet createJokerChannelSet()
  {
    net.sourceforge.czt.circuspatt.ast.JokerChannelSet zedObject = new net.sourceforge.czt.circuspatt.impl.JokerChannelSetImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerChannelSet createJokerChannelSet( String  name, String  id)
  {
    net.sourceforge.czt.circuspatt.ast.JokerChannelSet zedObject = createJokerChannelSet();
    zedObject.setName(name);
    zedObject.setId(id);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.CircusJokers createCircusJokers()
  {
    net.sourceforge.czt.circuspatt.ast.CircusJokers zedObject = new net.sourceforge.czt.circuspatt.impl.CircusJokersImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.CircusJokers createCircusJokers(java.util.List<? extends String>
 name,net.sourceforge.czt.circuspatt.ast.CircusJokerType
 circusJokerType)
  {
    net.sourceforge.czt.circuspatt.ast.CircusJokers zedObject = createCircusJokers();
    if (name != null) {
      zedObject.getName().addAll(name);
    }
    zedObject.setCircusJokerType(circusJokerType);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerNameSetBinding createJokerNameSetBinding()
  {
    net.sourceforge.czt.circuspatt.ast.JokerNameSetBinding zedObject = new net.sourceforge.czt.circuspatt.impl.JokerNameSetBindingImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerNameSetBinding createJokerNameSetBinding( net.sourceforge.czt.circuspatt.ast.JokerNameSet  jokerNameSet, net.sourceforge.czt.circus.ast.NameSet  nameSet)
  {
    net.sourceforge.czt.circuspatt.ast.JokerNameSetBinding zedObject = createJokerNameSetBinding();
    zedObject.setJokerNameSet(jokerNameSet);
    zedObject.setNameSet(nameSet);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerPara createJokerPara()
  {
    net.sourceforge.czt.circuspatt.ast.JokerPara zedObject = new net.sourceforge.czt.circuspatt.impl.JokerParaImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerPara createJokerPara( String  name, String  id)
  {
    net.sourceforge.czt.circuspatt.ast.JokerPara zedObject = createJokerPara();
    zedObject.setName(name);
    zedObject.setId(id);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerParaBinding createJokerParaBinding()
  {
    net.sourceforge.czt.circuspatt.ast.JokerParaBinding zedObject = new net.sourceforge.czt.circuspatt.impl.JokerParaBindingImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerParaBinding createJokerParaBinding( net.sourceforge.czt.circuspatt.ast.JokerPara  jokerPara, net.sourceforge.czt.z.ast.Para  para)
  {
    net.sourceforge.czt.circuspatt.ast.JokerParaBinding zedObject = createJokerParaBinding();
    zedObject.setJokerPara(jokerPara);
    zedObject.setPara(para);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerParaListBinding createJokerParaListBinding()
  {
    net.sourceforge.czt.circuspatt.ast.JokerParaListBinding zedObject = new net.sourceforge.czt.circuspatt.impl.JokerParaListBindingImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerParaListBinding createJokerParaListBinding( net.sourceforge.czt.circuspatt.ast.JokerParaList  jokerParaList, net.sourceforge.czt.z.ast.ParaList  paraList)
  {
    net.sourceforge.czt.circuspatt.ast.JokerParaListBinding zedObject = createJokerParaListBinding();
    zedObject.setJokerParaList(jokerParaList);
    zedObject.setParaList(paraList);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerProcess createJokerProcess()
  {
    net.sourceforge.czt.circuspatt.ast.JokerProcess zedObject = new net.sourceforge.czt.circuspatt.impl.JokerProcessImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerProcess createJokerProcess( String  name, String  id)
  {
    net.sourceforge.czt.circuspatt.ast.JokerProcess zedObject = createJokerProcess();
    zedObject.setName(name);
    zedObject.setId(id);
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerParaList createJokerParaList()
  {
    net.sourceforge.czt.circuspatt.ast.JokerParaList zedObject = new net.sourceforge.czt.circuspatt.impl.JokerParaListImpl(this);
    countInstance();
    return zedObject;
  }

  public net.sourceforge.czt.circuspatt.ast.JokerParaList createJokerParaList( String  name, String  id)
  {
    net.sourceforge.czt.circuspatt.ast.JokerParaList zedObject = createJokerParaList();
    zedObject.setName(name);
    zedObject.setId(id);
    return zedObject;
  }

}
