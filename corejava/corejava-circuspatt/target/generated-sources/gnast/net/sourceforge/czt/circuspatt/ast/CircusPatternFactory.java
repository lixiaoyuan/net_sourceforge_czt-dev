
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE CoreFactory.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005, 2006, 2007 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.circuspatt.ast;


/**
 * <p>The object factory for the AST.
 * This interface contains factory methods
 * for each concrete Z term.</p>
 *
 * <p>This object factory allows the programmer to programatically
 * construct new instances of concrete Z terms.
 * There is a factory method that does not require arguments
 * (called default factory method)
 * and a factory method where all the children (except annotations)
 * of that particular Z term can be provided.</p>
 *
 * @author GnAST version 1.6-cdh
 */
public interface CircusPatternFactory
  extends net.sourceforge.czt.circus.ast.CircusFactory
{
  /**
   * Creates an instance of {@link JokerCommunicationBinding}.
   *
   * @return the new instance of JokerCommunicationBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerCommunicationBinding createJokerCommunicationBinding();

  /**
   * Creates an instance of {@link JokerCommunicationBinding} with the given children.
   *
   * @return the new instance of JokerCommunicationBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerCommunicationBinding createJokerCommunicationBinding( net.sourceforge.czt.circuspatt.ast.JokerCommunication  jokerCommunication, net.sourceforge.czt.circus.ast.Communication  communication);

  /**
   * Creates an instance of {@link JokerChannelSetBinding}.
   *
   * @return the new instance of JokerChannelSetBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerChannelSetBinding createJokerChannelSetBinding();

  /**
   * Creates an instance of {@link JokerChannelSetBinding} with the given children.
   *
   * @return the new instance of JokerChannelSetBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerChannelSetBinding createJokerChannelSetBinding( net.sourceforge.czt.circuspatt.ast.JokerChannelSet  jokerChannelSet, net.sourceforge.czt.circus.ast.ChannelSet  channelSet);

  /**
   * Creates an instance of {@link JokerCommunication}.
   *
   * @return the new instance of JokerCommunication.
   */
  net.sourceforge.czt.circuspatt.ast.JokerCommunication createJokerCommunication();

  /**
   * Creates an instance of {@link JokerCommunication} with the given children.
   *
   * @return the new instance of JokerCommunication.
   */
  net.sourceforge.czt.circuspatt.ast.JokerCommunication createJokerCommunication( net.sourceforge.czt.z.ast.RefExpr  channelExpr, net.sourceforge.czt.circus.ast.FieldList  fieldList,net.sourceforge.czt.circus.ast.CommUsage
 commUsage,net.sourceforge.czt.circus.ast.CommPattern
 commPattern, java.math.BigInteger  multiSych, Boolean  indexed, String  name, String  id);

  /**
   * Creates an instance of {@link JokerProcessBinding}.
   *
   * @return the new instance of JokerProcessBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerProcessBinding createJokerProcessBinding();

  /**
   * Creates an instance of {@link JokerProcessBinding} with the given children.
   *
   * @return the new instance of JokerProcessBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerProcessBinding createJokerProcessBinding( net.sourceforge.czt.circuspatt.ast.JokerProcess  jokerProcess, net.sourceforge.czt.circus.ast.CircusProcess  circusProcess);

  /**
   * Creates an instance of {@link JokerNameSet}.
   *
   * @return the new instance of JokerNameSet.
   */
  net.sourceforge.czt.circuspatt.ast.JokerNameSet createJokerNameSet();

  /**
   * Creates an instance of {@link JokerNameSet} with the given children.
   *
   * @return the new instance of JokerNameSet.
   */
  net.sourceforge.czt.circuspatt.ast.JokerNameSet createJokerNameSet( String  name, String  id);

  /**
   * Creates an instance of {@link JokerActionBinding}.
   *
   * @return the new instance of JokerActionBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerActionBinding createJokerActionBinding();

  /**
   * Creates an instance of {@link JokerActionBinding} with the given children.
   *
   * @return the new instance of JokerActionBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerActionBinding createJokerActionBinding( net.sourceforge.czt.circuspatt.ast.JokerAction  jokerAction, net.sourceforge.czt.circus.ast.CircusAction  circusAction);

  /**
   * Creates an instance of {@link JokerAction}.
   *
   * @return the new instance of JokerAction.
   */
  net.sourceforge.czt.circuspatt.ast.JokerAction createJokerAction();

  /**
   * Creates an instance of {@link JokerAction} with the given children.
   *
   * @return the new instance of JokerAction.
   */
  net.sourceforge.czt.circuspatt.ast.JokerAction createJokerAction( String  name, String  id);

  /**
   * Creates an instance of {@link JokerChannelSet}.
   *
   * @return the new instance of JokerChannelSet.
   */
  net.sourceforge.czt.circuspatt.ast.JokerChannelSet createJokerChannelSet();

  /**
   * Creates an instance of {@link JokerChannelSet} with the given children.
   *
   * @return the new instance of JokerChannelSet.
   */
  net.sourceforge.czt.circuspatt.ast.JokerChannelSet createJokerChannelSet( String  name, String  id);

  /**
   * Creates an instance of {@link CircusJokers}.
   *
   * @return the new instance of CircusJokers.
   */
  net.sourceforge.czt.circuspatt.ast.CircusJokers createCircusJokers();

  /**
   * Creates an instance of {@link CircusJokers} with the given children.
   *
   * @return the new instance of CircusJokers.
   */
  net.sourceforge.czt.circuspatt.ast.CircusJokers createCircusJokers(java.util.List<? extends String>
 name,net.sourceforge.czt.circuspatt.ast.CircusJokerType
 circusJokerType);

  /**
   * Creates an instance of {@link JokerNameSetBinding}.
   *
   * @return the new instance of JokerNameSetBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerNameSetBinding createJokerNameSetBinding();

  /**
   * Creates an instance of {@link JokerNameSetBinding} with the given children.
   *
   * @return the new instance of JokerNameSetBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerNameSetBinding createJokerNameSetBinding( net.sourceforge.czt.circuspatt.ast.JokerNameSet  jokerNameSet, net.sourceforge.czt.circus.ast.NameSet  nameSet);

  /**
   * Creates an instance of {@link JokerPara}.
   *
   * @return the new instance of JokerPara.
   */
  net.sourceforge.czt.circuspatt.ast.JokerPara createJokerPara();

  /**
   * Creates an instance of {@link JokerPara} with the given children.
   *
   * @return the new instance of JokerPara.
   */
  net.sourceforge.czt.circuspatt.ast.JokerPara createJokerPara( String  name, String  id);

  /**
   * Creates an instance of {@link JokerParaBinding}.
   *
   * @return the new instance of JokerParaBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerParaBinding createJokerParaBinding();

  /**
   * Creates an instance of {@link JokerParaBinding} with the given children.
   *
   * @return the new instance of JokerParaBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerParaBinding createJokerParaBinding( net.sourceforge.czt.circuspatt.ast.JokerPara  jokerPara, net.sourceforge.czt.z.ast.Para  para);

  /**
   * Creates an instance of {@link JokerParaListBinding}.
   *
   * @return the new instance of JokerParaListBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerParaListBinding createJokerParaListBinding();

  /**
   * Creates an instance of {@link JokerParaListBinding} with the given children.
   *
   * @return the new instance of JokerParaListBinding.
   */
  net.sourceforge.czt.circuspatt.ast.JokerParaListBinding createJokerParaListBinding( net.sourceforge.czt.circuspatt.ast.JokerParaList  jokerParaList, net.sourceforge.czt.z.ast.ParaList  paraList);

  /**
   * Creates an instance of {@link JokerProcess}.
   *
   * @return the new instance of JokerProcess.
   */
  net.sourceforge.czt.circuspatt.ast.JokerProcess createJokerProcess();

  /**
   * Creates an instance of {@link JokerProcess} with the given children.
   *
   * @return the new instance of JokerProcess.
   */
  net.sourceforge.czt.circuspatt.ast.JokerProcess createJokerProcess( String  name, String  id);

  /**
   * Creates an instance of {@link JokerParaList}.
   *
   * @return the new instance of JokerParaList.
   */
  net.sourceforge.czt.circuspatt.ast.JokerParaList createJokerParaList();

  /**
   * Creates an instance of {@link JokerParaList} with the given children.
   *
   * @return the new instance of JokerParaList.
   */
  net.sourceforge.czt.circuspatt.ast.JokerParaList createJokerParaList( String  name, String  id);

}
