
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE CoreFactory.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005, 2006, 2007 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.oz.ast;


/**
 * <p>The object factory for the AST.
 * This interface contains factory methods
 * for each concrete Z term.</p>
 *
 * <p>This object factory allows the programmer to programatically
 * construct new instances of concrete Z terms.
 * There is a factory method that does not require arguments
 * (called default factory method)
 * and a factory method where all the children (except annotations)
 * of that particular Z term can be provided.</p>
 *
 * @author GnAST version 1.6-cdh
 */
public interface OzFactory
  extends net.sourceforge.czt.zpatt.ast.ZpattFactory
{
  /**
   * Creates an instance of {@link PrimaryDecl}.
   *
   * @return the new instance of PrimaryDecl.
   */
  net.sourceforge.czt.oz.ast.PrimaryDecl createPrimaryDecl();

  /**
   * Creates an instance of {@link PrimaryDecl} with the given children.
   *
   * @return the new instance of PrimaryDecl.
   */
  net.sourceforge.czt.oz.ast.PrimaryDecl createPrimaryDecl( net.sourceforge.czt.z.ast.DeclList  declList);

  /**
   * Creates an instance of {@link OpPromotionExpr}.
   *
   * @return the new instance of OpPromotionExpr.
   */
  net.sourceforge.czt.oz.ast.OpPromotionExpr createOpPromotionExpr();

  /**
   * Creates an instance of {@link OpPromotionExpr} with the given children.
   *
   * @return the new instance of OpPromotionExpr.
   */
  net.sourceforge.czt.oz.ast.OpPromotionExpr createOpPromotionExpr( net.sourceforge.czt.z.ast.Expr  expr, net.sourceforge.czt.z.ast.Name  name);

  /**
   * Creates an instance of {@link ClassPara}.
   *
   * @return the new instance of ClassPara.
   */
  net.sourceforge.czt.oz.ast.ClassPara createClassPara();

  /**
   * Creates an instance of {@link ClassPara} with the given children.
   *
   * @return the new instance of ClassPara.
   */
  net.sourceforge.czt.oz.ast.ClassPara createClassPara( net.sourceforge.czt.z.ast.Name  name, net.sourceforge.czt.z.ast.NameList  nameList, net.sourceforge.czt.oz.ast.VisibilityList  visibilityList, net.sourceforge.czt.z.ast.ExprList  inheritedClass,java.util.List<? extends net.sourceforge.czt.z.ast.Para>
 localDef, net.sourceforge.czt.oz.ast.State  state, net.sourceforge.czt.oz.ast.InitialState  initialState,java.util.List<? extends net.sourceforge.czt.oz.ast.Operation>
 operation);

  /**
   * Creates an instance of {@link ClassRef}.
   *
   * @return the new instance of ClassRef.
   */
  net.sourceforge.czt.oz.ast.ClassRef createClassRef();

  /**
   * Creates an instance of {@link ClassRef} with the given children.
   *
   * @return the new instance of ClassRef.
   */
  net.sourceforge.czt.oz.ast.ClassRef createClassRef( net.sourceforge.czt.z.ast.ZName  name,java.util.List<? extends net.sourceforge.czt.z.ast.Type2>
 type,java.util.List<? extends net.sourceforge.czt.z.ast.NewOldPair>
 newOldPair);

  /**
   * Creates an instance of {@link DeltaList}.
   *
   * @return the new instance of DeltaList.
   */
  net.sourceforge.czt.oz.ast.DeltaList createDeltaList();

  /**
   * Creates an instance of {@link DeltaList} with the given children.
   *
   * @return the new instance of DeltaList.
   */
  net.sourceforge.czt.oz.ast.DeltaList createDeltaList(java.util.List<? extends net.sourceforge.czt.z.ast.Name>
 name);

  /**
   * Creates an instance of {@link VisibilityList}.
   *
   * @return the new instance of VisibilityList.
   */
  net.sourceforge.czt.oz.ast.VisibilityList createVisibilityList();

  /**
   * Creates an instance of {@link VisibilityList} with the given children.
   *
   * @return the new instance of VisibilityList.
   */
  net.sourceforge.czt.oz.ast.VisibilityList createVisibilityList(java.util.List<? extends net.sourceforge.czt.z.ast.ZName>
 zName);

  /**
   * Creates an instance of {@link PolyExpr}.
   *
   * @return the new instance of PolyExpr.
   */
  net.sourceforge.czt.oz.ast.PolyExpr createPolyExpr();

  /**
   * Creates an instance of {@link PolyExpr} with the given children.
   *
   * @return the new instance of PolyExpr.
   */
  net.sourceforge.czt.oz.ast.PolyExpr createPolyExpr( net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link ConjOpExpr}.
   *
   * @return the new instance of ConjOpExpr.
   */
  net.sourceforge.czt.oz.ast.ConjOpExpr createConjOpExpr();

  /**
   * Creates an instance of {@link ConjOpExpr} with the given children.
   *
   * @return the new instance of ConjOpExpr.
   */
  net.sourceforge.czt.oz.ast.ConjOpExpr createConjOpExpr(java.util.List<? extends net.sourceforge.czt.oz.ast.OpExpr>
 opExpr);

  /**
   * Creates an instance of {@link Operation}.
   *
   * @return the new instance of Operation.
   */
  net.sourceforge.czt.oz.ast.Operation createOperation();

  /**
   * Creates an instance of {@link Operation} with the given children.
   *
   * @return the new instance of Operation.
   */
  net.sourceforge.czt.oz.ast.Operation createOperation( net.sourceforge.czt.z.ast.Name  name, net.sourceforge.czt.oz.ast.OpExpr  opExpr,net.sourceforge.czt.z.ast.Box
 box);

  /**
   * Creates an instance of {@link NameSignaturePair}.
   *
   * @return the new instance of NameSignaturePair.
   */
  net.sourceforge.czt.oz.ast.NameSignaturePair createNameSignaturePair();

  /**
   * Creates an instance of {@link NameSignaturePair} with the given children.
   *
   * @return the new instance of NameSignaturePair.
   */
  net.sourceforge.czt.oz.ast.NameSignaturePair createNameSignaturePair( net.sourceforge.czt.z.ast.Name  name, net.sourceforge.czt.z.ast.Signature  signature);

  /**
   * Creates an instance of {@link AssoParallelOpExpr}.
   *
   * @return the new instance of AssoParallelOpExpr.
   */
  net.sourceforge.czt.oz.ast.AssoParallelOpExpr createAssoParallelOpExpr();

  /**
   * Creates an instance of {@link AssoParallelOpExpr} with the given children.
   *
   * @return the new instance of AssoParallelOpExpr.
   */
  net.sourceforge.czt.oz.ast.AssoParallelOpExpr createAssoParallelOpExpr(java.util.List<? extends net.sourceforge.czt.oz.ast.OpExpr>
 opExpr);

  /**
   * Creates an instance of {@link DistConjOpExpr}.
   *
   * @return the new instance of DistConjOpExpr.
   */
  net.sourceforge.czt.oz.ast.DistConjOpExpr createDistConjOpExpr();

  /**
   * Creates an instance of {@link DistConjOpExpr} with the given children.
   *
   * @return the new instance of DistConjOpExpr.
   */
  net.sourceforge.czt.oz.ast.DistConjOpExpr createDistConjOpExpr( net.sourceforge.czt.z.ast.SchText  schText, net.sourceforge.czt.oz.ast.OpExpr  opExpr);

  /**
   * Creates an instance of {@link DistChoiceOpExpr}.
   *
   * @return the new instance of DistChoiceOpExpr.
   */
  net.sourceforge.czt.oz.ast.DistChoiceOpExpr createDistChoiceOpExpr();

  /**
   * Creates an instance of {@link DistChoiceOpExpr} with the given children.
   *
   * @return the new instance of DistChoiceOpExpr.
   */
  net.sourceforge.czt.oz.ast.DistChoiceOpExpr createDistChoiceOpExpr( net.sourceforge.czt.z.ast.SchText  schText, net.sourceforge.czt.oz.ast.OpExpr  opExpr);

  /**
   * Creates an instance of {@link SeqOpExpr}.
   *
   * @return the new instance of SeqOpExpr.
   */
  net.sourceforge.czt.oz.ast.SeqOpExpr createSeqOpExpr();

  /**
   * Creates an instance of {@link SeqOpExpr} with the given children.
   *
   * @return the new instance of SeqOpExpr.
   */
  net.sourceforge.czt.oz.ast.SeqOpExpr createSeqOpExpr(java.util.List<? extends net.sourceforge.czt.oz.ast.OpExpr>
 opExpr);

  /**
   * Creates an instance of {@link ScopeEnrichOpExpr}.
   *
   * @return the new instance of ScopeEnrichOpExpr.
   */
  net.sourceforge.czt.oz.ast.ScopeEnrichOpExpr createScopeEnrichOpExpr();

  /**
   * Creates an instance of {@link ScopeEnrichOpExpr} with the given children.
   *
   * @return the new instance of ScopeEnrichOpExpr.
   */
  net.sourceforge.czt.oz.ast.ScopeEnrichOpExpr createScopeEnrichOpExpr(java.util.List<? extends net.sourceforge.czt.oz.ast.OpExpr>
 opExpr);

  /**
   * Creates an instance of {@link ClassUnionType}.
   *
   * @return the new instance of ClassUnionType.
   */
  net.sourceforge.czt.oz.ast.ClassUnionType createClassUnionType();

  /**
   * Creates an instance of {@link ClassUnionType} with the given children.
   *
   * @return the new instance of ClassUnionType.
   */
  net.sourceforge.czt.oz.ast.ClassUnionType createClassUnionType( net.sourceforge.czt.oz.ast.ClassRefList  classes, net.sourceforge.czt.z.ast.Signature  state,java.util.List<? extends net.sourceforge.czt.z.ast.NameTypePair>
 attribute,java.util.List<? extends net.sourceforge.czt.oz.ast.NameSignaturePair>
 operation);

  /**
   * Creates an instance of {@link ClassRefList}.
   *
   * @return the new instance of ClassRefList.
   */
  net.sourceforge.czt.oz.ast.ClassRefList createClassRefList();

  /**
   * Creates an instance of {@link ClassRefList} with the given children.
   *
   * @return the new instance of ClassRefList.
   */
  net.sourceforge.czt.oz.ast.ClassRefList createClassRefList(java.util.List<? extends net.sourceforge.czt.oz.ast.ClassRef>
 classRef);

  /**
   * Creates an instance of {@link SecondaryDecl}.
   *
   * @return the new instance of SecondaryDecl.
   */
  net.sourceforge.czt.oz.ast.SecondaryDecl createSecondaryDecl();

  /**
   * Creates an instance of {@link SecondaryDecl} with the given children.
   *
   * @return the new instance of SecondaryDecl.
   */
  net.sourceforge.czt.oz.ast.SecondaryDecl createSecondaryDecl( net.sourceforge.czt.z.ast.DeclList  declList);

  /**
   * Creates an instance of {@link RenameOpExpr}.
   *
   * @return the new instance of RenameOpExpr.
   */
  net.sourceforge.czt.oz.ast.RenameOpExpr createRenameOpExpr();

  /**
   * Creates an instance of {@link RenameOpExpr} with the given children.
   *
   * @return the new instance of RenameOpExpr.
   */
  net.sourceforge.czt.oz.ast.RenameOpExpr createRenameOpExpr( net.sourceforge.czt.oz.ast.OpExpr  opExpr, net.sourceforge.czt.z.ast.RenameList  renameList);

  /**
   * Creates an instance of {@link ParallelOpExpr}.
   *
   * @return the new instance of ParallelOpExpr.
   */
  net.sourceforge.czt.oz.ast.ParallelOpExpr createParallelOpExpr();

  /**
   * Creates an instance of {@link ParallelOpExpr} with the given children.
   *
   * @return the new instance of ParallelOpExpr.
   */
  net.sourceforge.czt.oz.ast.ParallelOpExpr createParallelOpExpr(java.util.List<? extends net.sourceforge.czt.oz.ast.OpExpr>
 opExpr);

  /**
   * Creates an instance of {@link DistSeqOpExpr}.
   *
   * @return the new instance of DistSeqOpExpr.
   */
  net.sourceforge.czt.oz.ast.DistSeqOpExpr createDistSeqOpExpr();

  /**
   * Creates an instance of {@link DistSeqOpExpr} with the given children.
   *
   * @return the new instance of DistSeqOpExpr.
   */
  net.sourceforge.czt.oz.ast.DistSeqOpExpr createDistSeqOpExpr( net.sourceforge.czt.z.ast.SchText  schText, net.sourceforge.czt.oz.ast.OpExpr  opExpr);

  /**
   * Creates an instance of {@link ClassRefType}.
   *
   * @return the new instance of ClassRefType.
   */
  net.sourceforge.czt.oz.ast.ClassRefType createClassRefType();

  /**
   * Creates an instance of {@link ClassRefType} with the given children.
   *
   * @return the new instance of ClassRefType.
   */
  net.sourceforge.czt.oz.ast.ClassRefType createClassRefType( net.sourceforge.czt.oz.ast.ClassRefList  classes, net.sourceforge.czt.z.ast.Signature  state,java.util.List<? extends net.sourceforge.czt.z.ast.NameTypePair>
 attribute,java.util.List<? extends net.sourceforge.czt.oz.ast.NameSignaturePair>
 operation, net.sourceforge.czt.oz.ast.ClassRef  thisClass, net.sourceforge.czt.oz.ast.ClassRefList  superClass, net.sourceforge.czt.oz.ast.VisibilityList  visibilityList,java.util.List<? extends net.sourceforge.czt.z.ast.Name>
 primary);

  /**
   * Creates an instance of {@link HideOpExpr}.
   *
   * @return the new instance of HideOpExpr.
   */
  net.sourceforge.czt.oz.ast.HideOpExpr createHideOpExpr();

  /**
   * Creates an instance of {@link HideOpExpr} with the given children.
   *
   * @return the new instance of HideOpExpr.
   */
  net.sourceforge.czt.oz.ast.HideOpExpr createHideOpExpr( net.sourceforge.czt.oz.ast.OpExpr  opExpr, net.sourceforge.czt.z.ast.NameList  nameList);

  /**
   * Creates an instance of {@link ContainmentExpr}.
   *
   * @return the new instance of ContainmentExpr.
   */
  net.sourceforge.czt.oz.ast.ContainmentExpr createContainmentExpr();

  /**
   * Creates an instance of {@link ContainmentExpr} with the given children.
   *
   * @return the new instance of ContainmentExpr.
   */
  net.sourceforge.czt.oz.ast.ContainmentExpr createContainmentExpr( net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link ExChoiceOpExpr}.
   *
   * @return the new instance of ExChoiceOpExpr.
   */
  net.sourceforge.czt.oz.ast.ExChoiceOpExpr createExChoiceOpExpr();

  /**
   * Creates an instance of {@link ExChoiceOpExpr} with the given children.
   *
   * @return the new instance of ExChoiceOpExpr.
   */
  net.sourceforge.czt.oz.ast.ExChoiceOpExpr createExChoiceOpExpr(java.util.List<? extends net.sourceforge.czt.oz.ast.OpExpr>
 opExpr);

  /**
   * Creates an instance of {@link OpText}.
   *
   * @return the new instance of OpText.
   */
  net.sourceforge.czt.oz.ast.OpText createOpText();

  /**
   * Creates an instance of {@link OpText} with the given children.
   *
   * @return the new instance of OpText.
   */
  net.sourceforge.czt.oz.ast.OpText createOpText( net.sourceforge.czt.oz.ast.DeltaList  deltaList, net.sourceforge.czt.z.ast.SchText  schText);

  /**
   * Creates an instance of {@link ClassPolyType}.
   *
   * @return the new instance of ClassPolyType.
   */
  net.sourceforge.czt.oz.ast.ClassPolyType createClassPolyType();

  /**
   * Creates an instance of {@link ClassPolyType} with the given children.
   *
   * @return the new instance of ClassPolyType.
   */
  net.sourceforge.czt.oz.ast.ClassPolyType createClassPolyType( net.sourceforge.czt.oz.ast.ClassRefList  classes, net.sourceforge.czt.z.ast.Signature  state,java.util.List<? extends net.sourceforge.czt.z.ast.NameTypePair>
 attribute,java.util.List<? extends net.sourceforge.czt.oz.ast.NameSignaturePair>
 operation, net.sourceforge.czt.oz.ast.ClassRef  rootClass);

  /**
   * Creates an instance of {@link ClassUnionExpr}.
   *
   * @return the new instance of ClassUnionExpr.
   */
  net.sourceforge.czt.oz.ast.ClassUnionExpr createClassUnionExpr();

  /**
   * Creates an instance of {@link ClassUnionExpr} with the given children.
   *
   * @return the new instance of ClassUnionExpr.
   */
  net.sourceforge.czt.oz.ast.ClassUnionExpr createClassUnionExpr(java.util.List<? extends net.sourceforge.czt.z.ast.Expr>
 expr);

  /**
   * Creates an instance of {@link InitialState}.
   *
   * @return the new instance of InitialState.
   */
  net.sourceforge.czt.oz.ast.InitialState createInitialState();

  /**
   * Creates an instance of {@link InitialState} with the given children.
   *
   * @return the new instance of InitialState.
   */
  net.sourceforge.czt.oz.ast.InitialState createInitialState( net.sourceforge.czt.z.ast.Pred  pred,net.sourceforge.czt.z.ast.Box
 box);

  /**
   * Creates an instance of {@link AnonOpExpr}.
   *
   * @return the new instance of AnonOpExpr.
   */
  net.sourceforge.czt.oz.ast.AnonOpExpr createAnonOpExpr();

  /**
   * Creates an instance of {@link AnonOpExpr} with the given children.
   *
   * @return the new instance of AnonOpExpr.
   */
  net.sourceforge.czt.oz.ast.AnonOpExpr createAnonOpExpr( net.sourceforge.czt.oz.ast.OpText  opText);

  /**
   * Creates an instance of {@link PredExpr}.
   *
   * @return the new instance of PredExpr.
   */
  net.sourceforge.czt.oz.ast.PredExpr createPredExpr();

  /**
   * Creates an instance of {@link PredExpr} with the given children.
   *
   * @return the new instance of PredExpr.
   */
  net.sourceforge.czt.oz.ast.PredExpr createPredExpr( net.sourceforge.czt.z.ast.Pred  pred);

  /**
   * Creates an instance of {@link State}.
   *
   * @return the new instance of State.
   */
  net.sourceforge.czt.oz.ast.State createState();

  /**
   * Creates an instance of {@link State} with the given children.
   *
   * @return the new instance of State.
   */
  net.sourceforge.czt.oz.ast.State createState( net.sourceforge.czt.oz.ast.PrimaryDecl  primaryDecl, net.sourceforge.czt.oz.ast.SecondaryDecl  secondaryDecl, net.sourceforge.czt.z.ast.Pred  pred,net.sourceforge.czt.z.ast.Box
 box);

}
