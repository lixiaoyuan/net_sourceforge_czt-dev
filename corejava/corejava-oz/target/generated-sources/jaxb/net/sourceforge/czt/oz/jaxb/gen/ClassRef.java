//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.10.18 at 08:38:27 AM UTC 
//


package net.sourceforge.czt.oz.jaxb.gen;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import net.sourceforge.czt.z.jaxb.gen.GenParamType;
import net.sourceforge.czt.z.jaxb.gen.GivenType;
import net.sourceforge.czt.z.jaxb.gen.NewOldPair;
import net.sourceforge.czt.z.jaxb.gen.PowerType;
import net.sourceforge.czt.z.jaxb.gen.ProdType;
import net.sourceforge.czt.z.jaxb.gen.SchemaType;
import net.sourceforge.czt.z.jaxb.gen.Term;
import net.sourceforge.czt.z.jaxb.gen.Type2;
import net.sourceforge.czt.z.jaxb.gen.ZName;


/**
 * <p>Java class for ClassRef complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ClassRef">
 *   &lt;complexContent>
 *     &lt;extension base="{http://czt.sourceforge.net/zml}Term">
 *       &lt;sequence>
 *         &lt;element ref="{http://czt.sourceforge.net/zml}ZName"/>
 *         &lt;element ref="{http://czt.sourceforge.net/zml}Type2" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://czt.sourceforge.net/zml}NewOldPair" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ClassRef", propOrder = {
    "name",
    "type",
    "newOldPair"
})
public class ClassRef
    extends Term
{

    @XmlElementRef(name = "ZName", namespace = "http://czt.sourceforge.net/zml", type = JAXBElement.class)
    protected JAXBElement<ZName> name;
    @XmlElementRef(name = "Type2", namespace = "http://czt.sourceforge.net/zml", type = JAXBElement.class)
    protected List<JAXBElement<? extends Type2>> type;
    @XmlElementRef(name = "NewOldPair", namespace = "http://czt.sourceforge.net/zml", type = JAXBElement.class)
    protected List<JAXBElement<NewOldPair>> newOldPair;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link ZName }{@code >}
     *     
     */
    public JAXBElement<ZName> getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link ZName }{@code >}
     *     
     */
    public void setName(JAXBElement<ZName> value) {
        this.name = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the type property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link GivenType }{@code >}
     * {@link JAXBElement }{@code <}{@link Type2 }{@code >}
     * {@link JAXBElement }{@code <}{@link SchemaType }{@code >}
     * {@link JAXBElement }{@code <}{@link ClassUnionType }{@code >}
     * {@link JAXBElement }{@code <}{@link PowerType }{@code >}
     * {@link JAXBElement }{@code <}{@link ProdType }{@code >}
     * {@link JAXBElement }{@code <}{@link GenParamType }{@code >}
     * {@link JAXBElement }{@code <}{@link ClassPolyType }{@code >}
     * {@link JAXBElement }{@code <}{@link ClassRefType }{@code >}
     * {@link JAXBElement }{@code <}{@link ClassType }{@code >}
     * 
     * 
     */
    public List<JAXBElement<? extends Type2>> getType() {
        if (type == null) {
            type = new ArrayList<JAXBElement<? extends Type2>>();
        }
        return this.type;
    }

    /**
     * Gets the value of the newOldPair property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the newOldPair property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNewOldPair().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link NewOldPair }{@code >}
     * 
     * 
     */
    public List<JAXBElement<NewOldPair>> getNewOldPair() {
        if (newOldPair == null) {
            newOldPair = new ArrayList<JAXBElement<NewOldPair>>();
        }
        return this.newOldPair;
    }

}
