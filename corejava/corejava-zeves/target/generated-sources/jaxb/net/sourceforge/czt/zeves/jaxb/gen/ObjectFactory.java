//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.10.18 at 08:38:17 AM UTC 
//


package net.sourceforge.czt.zeves.jaxb.gen;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.sourceforge.czt.zeves.jaxb.gen package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ProofCommandInfo_QNAME = new QName("http://czt.sourceforge.net/zeves", "ProofCommandInfo");
    private final static QName _ProofScript_QNAME = new QName("http://czt.sourceforge.net/zeves", "ProofScript");
    private final static QName _InstantiationList_QNAME = new QName("http://czt.sourceforge.net/zeves", "InstantiationList");
    private final static QName _ProofCommandList_QNAME = new QName("http://czt.sourceforge.net/zeves", "ProofCommandList");
    private final static QName _ZEvesNote_QNAME = new QName("http://czt.sourceforge.net/zeves", "ZEvesNote");
    private final static QName _ZEvesLabel_QNAME = new QName("http://czt.sourceforge.net/zeves", "ZEvesLabel");
    private final static QName _WithCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "WithCommand");
    private final static QName _CaseAnalysisCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "CaseAnalysisCommand");
    private final static QName _ProofType_QNAME = new QName("http://czt.sourceforge.net/zeves", "ProofType");
    private final static QName _ProofCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "ProofCommand");
    private final static QName _ProofCommandInfoList_QNAME = new QName("http://czt.sourceforge.net/zeves", "ProofCommandInfoList");
    private final static QName _QuantifiersCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "QuantifiersCommand");
    private final static QName _SubstitutionCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "SubstitutionCommand");
    private final static QName _NormalizationCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "NormalizationCommand");
    private final static QName _WrappedCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "WrappedCommand");
    private final static QName _UseCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "UseCommand");
    private final static QName _SimplificationCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "SimplificationCommand");
    private final static QName _InstantiationCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "InstantiationCommand");
    private final static QName _Instantiation_QNAME = new QName("http://czt.sourceforge.net/zeves", "Instantiation");
    private final static QName _ComplexCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "ComplexCommand");
    private final static QName _ApplyCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "ApplyCommand");
    private final static QName _SorryCommand_QNAME = new QName("http://czt.sourceforge.net/zeves", "SorryCommand");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.sourceforge.czt.zeves.jaxb.gen
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link SimplificationCommand }
     * 
     */
    public SimplificationCommand createSimplificationCommand() {
        return new SimplificationCommand();
    }

    /**
     * Create an instance of {@link ProofCommand }
     * 
     */
    public ProofCommand createProofCommand() {
        return new ProofCommand();
    }

    /**
     * Create an instance of {@link InstantiationList }
     * 
     */
    public InstantiationList createInstantiationList() {
        return new InstantiationList();
    }

    /**
     * Create an instance of {@link ZEvesLabel }
     * 
     */
    public ZEvesLabel createZEvesLabel() {
        return new ZEvesLabel();
    }

    /**
     * Create an instance of {@link ApplyCommand }
     * 
     */
    public ApplyCommand createApplyCommand() {
        return new ApplyCommand();
    }

    /**
     * Create an instance of {@link ComplexCommand }
     * 
     */
    public ComplexCommand createComplexCommand() {
        return new ComplexCommand();
    }

    /**
     * Create an instance of {@link WrappedCommand }
     * 
     */
    public WrappedCommand createWrappedCommand() {
        return new WrappedCommand();
    }

    /**
     * Create an instance of {@link QuantifiersCommand }
     * 
     */
    public QuantifiersCommand createQuantifiersCommand() {
        return new QuantifiersCommand();
    }

    /**
     * Create an instance of {@link InstantiationCommand }
     * 
     */
    public InstantiationCommand createInstantiationCommand() {
        return new InstantiationCommand();
    }

    /**
     * Create an instance of {@link ProofCommandInfo }
     * 
     */
    public ProofCommandInfo createProofCommandInfo() {
        return new ProofCommandInfo();
    }

    /**
     * Create an instance of {@link ProofScript }
     * 
     */
    public ProofScript createProofScript() {
        return new ProofScript();
    }

    /**
     * Create an instance of {@link UseCommand }
     * 
     */
    public UseCommand createUseCommand() {
        return new UseCommand();
    }

    /**
     * Create an instance of {@link ProofCommandInfoList }
     * 
     */
    public ProofCommandInfoList createProofCommandInfoList() {
        return new ProofCommandInfoList();
    }

    /**
     * Create an instance of {@link SorryCommand }
     * 
     */
    public SorryCommand createSorryCommand() {
        return new SorryCommand();
    }

    /**
     * Create an instance of {@link ProofType }
     * 
     */
    public ProofType createProofType() {
        return new ProofType();
    }

    /**
     * Create an instance of {@link WithCommand }
     * 
     */
    public WithCommand createWithCommand() {
        return new WithCommand();
    }

    /**
     * Create an instance of {@link SubstitutionCommand }
     * 
     */
    public SubstitutionCommand createSubstitutionCommand() {
        return new SubstitutionCommand();
    }

    /**
     * Create an instance of {@link ZEvesNote }
     * 
     */
    public ZEvesNote createZEvesNote() {
        return new ZEvesNote();
    }

    /**
     * Create an instance of {@link NormalizationCommand }
     * 
     */
    public NormalizationCommand createNormalizationCommand() {
        return new NormalizationCommand();
    }

    /**
     * Create an instance of {@link ProofCommandList }
     * 
     */
    public ProofCommandList createProofCommandList() {
        return new ProofCommandList();
    }

    /**
     * Create an instance of {@link Instantiation }
     * 
     */
    public Instantiation createInstantiation() {
        return new Instantiation();
    }

    /**
     * Create an instance of {@link CaseAnalysisCommand }
     * 
     */
    public CaseAnalysisCommand createCaseAnalysisCommand() {
        return new CaseAnalysisCommand();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProofCommandInfo }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "ProofCommandInfo")
    public JAXBElement<ProofCommandInfo> createProofCommandInfo(ProofCommandInfo value) {
        return new JAXBElement<ProofCommandInfo>(_ProofCommandInfo_QNAME, ProofCommandInfo.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProofScript }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "ProofScript", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Para")
    public JAXBElement<ProofScript> createProofScript(ProofScript value) {
        return new JAXBElement<ProofScript>(_ProofScript_QNAME, ProofScript.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InstantiationList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "InstantiationList", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "RenameList")
    public JAXBElement<InstantiationList> createInstantiationList(InstantiationList value) {
        return new JAXBElement<InstantiationList>(_InstantiationList_QNAME, InstantiationList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProofCommandList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "ProofCommandList")
    public JAXBElement<ProofCommandList> createProofCommandList(ProofCommandList value) {
        return new JAXBElement<ProofCommandList>(_ProofCommandList_QNAME, ProofCommandList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ZEvesNote }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "ZEvesNote")
    public JAXBElement<ZEvesNote> createZEvesNote(ZEvesNote value) {
        return new JAXBElement<ZEvesNote>(_ZEvesNote_QNAME, ZEvesNote.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ZEvesLabel }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "ZEvesLabel")
    public JAXBElement<ZEvesLabel> createZEvesLabel(ZEvesLabel value) {
        return new JAXBElement<ZEvesLabel>(_ZEvesLabel_QNAME, ZEvesLabel.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WithCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "WithCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "ComplexCommand")
    public JAXBElement<WithCommand> createWithCommand(WithCommand value) {
        return new JAXBElement<WithCommand>(_WithCommand_QNAME, WithCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CaseAnalysisCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "CaseAnalysisCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "ProofCommand")
    public JAXBElement<CaseAnalysisCommand> createCaseAnalysisCommand(CaseAnalysisCommand value) {
        return new JAXBElement<CaseAnalysisCommand>(_CaseAnalysisCommand_QNAME, CaseAnalysisCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProofType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "ProofType", substitutionHeadNamespace = "http://czt.sourceforge.net/zml", substitutionHeadName = "Type2")
    public JAXBElement<ProofType> createProofType(ProofType value) {
        return new JAXBElement<ProofType>(_ProofType_QNAME, ProofType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProofCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "ProofCommand")
    public JAXBElement<ProofCommand> createProofCommand(ProofCommand value) {
        return new JAXBElement<ProofCommand>(_ProofCommand_QNAME, ProofCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProofCommandInfoList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "ProofCommandInfoList")
    public JAXBElement<ProofCommandInfoList> createProofCommandInfoList(ProofCommandInfoList value) {
        return new JAXBElement<ProofCommandInfoList>(_ProofCommandInfoList_QNAME, ProofCommandInfoList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QuantifiersCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "QuantifiersCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "InstantiationCommand")
    public JAXBElement<QuantifiersCommand> createQuantifiersCommand(QuantifiersCommand value) {
        return new JAXBElement<QuantifiersCommand>(_QuantifiersCommand_QNAME, QuantifiersCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubstitutionCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "SubstitutionCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "ComplexCommand")
    public JAXBElement<SubstitutionCommand> createSubstitutionCommand(SubstitutionCommand value) {
        return new JAXBElement<SubstitutionCommand>(_SubstitutionCommand_QNAME, SubstitutionCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NormalizationCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "NormalizationCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "WrappedCommand")
    public JAXBElement<NormalizationCommand> createNormalizationCommand(NormalizationCommand value) {
        return new JAXBElement<NormalizationCommand>(_NormalizationCommand_QNAME, NormalizationCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WrappedCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "WrappedCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "ProofCommand")
    public JAXBElement<WrappedCommand> createWrappedCommand(WrappedCommand value) {
        return new JAXBElement<WrappedCommand>(_WrappedCommand_QNAME, WrappedCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UseCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "UseCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "InstantiationCommand")
    public JAXBElement<UseCommand> createUseCommand(UseCommand value) {
        return new JAXBElement<UseCommand>(_UseCommand_QNAME, UseCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimplificationCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "SimplificationCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "ProofCommand")
    public JAXBElement<SimplificationCommand> createSimplificationCommand(SimplificationCommand value) {
        return new JAXBElement<SimplificationCommand>(_SimplificationCommand_QNAME, SimplificationCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InstantiationCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "InstantiationCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "ProofCommand")
    public JAXBElement<InstantiationCommand> createInstantiationCommand(InstantiationCommand value) {
        return new JAXBElement<InstantiationCommand>(_InstantiationCommand_QNAME, InstantiationCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Instantiation }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "Instantiation")
    public JAXBElement<Instantiation> createInstantiation(Instantiation value) {
        return new JAXBElement<Instantiation>(_Instantiation_QNAME, Instantiation.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComplexCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "ComplexCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "WrappedCommand")
    public JAXBElement<ComplexCommand> createComplexCommand(ComplexCommand value) {
        return new JAXBElement<ComplexCommand>(_ComplexCommand_QNAME, ComplexCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ApplyCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "ApplyCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "ComplexCommand")
    public JAXBElement<ApplyCommand> createApplyCommand(ApplyCommand value) {
        return new JAXBElement<ApplyCommand>(_ApplyCommand_QNAME, ApplyCommand.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SorryCommand }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://czt.sourceforge.net/zeves", name = "SorryCommand", substitutionHeadNamespace = "http://czt.sourceforge.net/zeves", substitutionHeadName = "ProofCommand")
    public JAXBElement<SorryCommand> createSorryCommand(SorryCommand value) {
        return new JAXBElement<SorryCommand>(_SorryCommand_QNAME, SorryCommand.class, null, value);
    }

}
