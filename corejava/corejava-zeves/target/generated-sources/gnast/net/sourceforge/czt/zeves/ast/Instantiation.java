
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE AstInterface.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005, 2006, 2007 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.zeves.ast;

																																																				

/**
 * Encapsulates one instantiation or replacement for the instantiate or use commands. It belongs to a list of instantiations.
        It can also appear in the extended renaming expression in ZEves, which allows for expressions in rename, instead of just names.
        In the parser, all renames will be from Name to Expr, even when they are just simple names, for uniformity.
 *
 * @author GnAST version 1.6-cdh
 */ 
 



public interface Instantiation extends   		net.sourceforge.czt.base.ast.Term
			{

  /**
   * Returns the Name element.
   *
   * @return the Name element.
   */
  net.sourceforge.czt.z.ast.Name getName();


  /**
   * Sets the Name element.
   *
   * @param name   the Name element.
   * @see #getName
   */
  void setName(net.sourceforge.czt.z.ast.Name name);

  /**
   * Returns the Expr element.
   *
   * @return the Expr element.
   */
  net.sourceforge.czt.z.ast.Expr getExpr();


  /**
   * Sets the Expr element.
   *
   * @param expr   the Expr element.
   * @see #getExpr
   */
  void setExpr(net.sourceforge.czt.z.ast.Expr expr);

  /**
   * Returns the InstantiationKind element.
   *
   * @return the InstantiationKind element.
   */
  InstantiationKind getInstantiationKind();


  /**
   * Sets the InstantiationKind element.
   *
   * @param instantiationKind   the InstantiationKind element.
   * @see #getInstantiationKind
   */
  void setInstantiationKind(InstantiationKind instantiationKind);

  /**
   * This is a convenience method.
   * It returns the ZName if Name is an instance of
	   * ZName and throws an UnsupportedAstClassException otherwise.
   */
  net.sourceforge.czt.z.ast.ZName getZName();}
