
/*
  Copyright 2005, 2006, 2007 Leonardo Freitas
  This file is part of the czt project.

  The czt project contains free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  The czt project is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with czt; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/

package net.sourceforge.czt.circustime.util;

import net.sourceforge.czt.circuspatt.util.*;

/**
 * An interface for commonly used Circus Time characters.
 *
 * @author generated by Gnast XSL script circustimechar2class.xsl
 */
public class CircusTimeChar extends CircusPattChar
{
  public CircusTimeChar(char[] chars)
  {
    super(chars);
  }



  /**
   * left time bracket.
   */
  public static final CircusTimeChar LCIRCTIME = new CircusTimeChar(Character.toChars(0x27EC));

  /**
   * right time bracket.
   */
  public static final CircusTimeChar RCIRCTIME = new CircusTimeChar(Character.toChars(0x27ED));

  /**
   * Time end by operator.
   */
  public static final CircusTimeChar CIRCENDBY = new CircusTimeChar(Character.toChars(0x25B6));

  /**
   * Time start by operator.
   */
  public static final CircusTimeChar CIRCSTARTBY = new CircusTimeChar(Character.toChars(0x25C0));

  /**
   * Timeout operator.
   */
  public static final CircusTimeChar CIRCTIMEOUT = new CircusTimeChar(Character.toChars(0x25B9));

  /**
   * Timedinterrupt operator.
   */
  public static final CircusTimeChar CIRCTIMEDINTERRUPT = new CircusTimeChar(Character.toChars(0x25B5));

  /**
   * AT-Time symbol.
   */
  public static final CircusTimeChar ATTIME = new CircusTimeChar(Character.toChars(0x0040));
}
