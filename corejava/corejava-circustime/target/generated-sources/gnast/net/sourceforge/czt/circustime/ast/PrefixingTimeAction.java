
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE AstInterface.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005, 2006, 2007 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.circustime.ast;

																																																				

/**
 * <p>
		 Common AST for all Circus Time actions. This include the three productions for prefixing as
		 at prefixing action (Comm@N prefix Act); prefixing expression action (Comm prefix expr act);
		 at prefixing expr action (Comm@N prefix expr Act). The first would have a null expr?, the second
		 a null N, the third a non null N and expr. and so on...
		 </p>
		 <p>
		 It's up to the programmer using/creating the AST to differentiate between these three cases.
		 It's worth NOT having explicit AST productions for each as they have too much in common and that
		 would lead to much repeated code and higher maintainence effort.
		 </p> 
		 <p>
		 DESIGN DECISION: we have decided against having something like a <code>TimedCommunication</code>
		 encompasing the channel elapsed time variable as this would greatly increase the complexity of the
		 grammar when handling Circus communication, which is already complex. This would also entail needs
		 for SmartScanning updates and potential conflicts. Given the elapsed time variable is not referenciable
		 within the communication (i.e. we cannot have c?x!y+u@u), then it is okay to keep it within the prefixing
		 itself.
		 </p>
 *
 * @author GnAST version 1.6-cdh
 */ 
 



public interface PrefixingTimeAction extends 		 												net.sourceforge.czt.circus.ast.PrefixingAction
						 			{

  /**
   * Returns the ChannelElapsedTime element.
   *
   * @return the ChannelElapsedTime element.
   */
  net.sourceforge.czt.z.ast.Name getChannelElapsedTime();


  /**
   * Sets the ChannelElapsedTime element.
   *
   * @param channelElapsedTime   the ChannelElapsedTime element.
   * @see #getChannelElapsedTime
   */
  void setChannelElapsedTime(net.sourceforge.czt.z.ast.Name channelElapsedTime);

  /**
   * Returns the Expr element.
   *
   * @return the Expr element.
   */
  net.sourceforge.czt.z.ast.Expr getExpr();


  /**
   * Sets the Expr element.
   *
   * @param expr   the Expr element.
   * @see #getExpr
   */
  void setExpr(net.sourceforge.czt.z.ast.Expr expr);
  boolean isAtPrefixingAction();
  boolean isPrefixingExprAction();
  boolean isAtPrefixingExprAction();
 
}
