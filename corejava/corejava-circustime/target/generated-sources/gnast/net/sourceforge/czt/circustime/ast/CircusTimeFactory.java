
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE CoreFactory.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005, 2006, 2007 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.circustime.ast;


/**
 * <p>The object factory for the AST.
 * This interface contains factory methods
 * for each concrete Z term.</p>
 *
 * <p>This object factory allows the programmer to programatically
 * construct new instances of concrete Z terms.
 * There is a factory method that does not require arguments
 * (called default factory method)
 * and a factory method where all the children (except annotations)
 * of that particular Z term can be provided.</p>
 *
 * @author GnAST version 1.6-cdh
 */
public interface CircusTimeFactory
  extends net.sourceforge.czt.circuspatt.ast.CircusPatternFactory
{
  /**
   * Creates an instance of {@link TimeEndByProcess}.
   *
   * @return the new instance of TimeEndByProcess.
   */
  net.sourceforge.czt.circustime.ast.TimeEndByProcess createTimeEndByProcess();

  /**
   * Creates an instance of {@link TimeEndByProcess} with the given children.
   *
   * @return the new instance of TimeEndByProcess.
   */
  net.sourceforge.czt.circustime.ast.TimeEndByProcess createTimeEndByProcess( net.sourceforge.czt.circus.ast.CircusProcess  circusProcess, net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link TimeoutProcess}.
   *
   * @return the new instance of TimeoutProcess.
   */
  net.sourceforge.czt.circustime.ast.TimeoutProcess createTimeoutProcess();

  /**
   * Creates an instance of {@link TimeoutProcess} with the given children.
   *
   * @return the new instance of TimeoutProcess.
   */
  net.sourceforge.czt.circustime.ast.TimeoutProcess createTimeoutProcess(java.util.List<? extends net.sourceforge.czt.circus.ast.CircusProcess>
 circusProcess, net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link WaitExprAction}.
   *
   * @return the new instance of WaitExprAction.
   */
  net.sourceforge.czt.circustime.ast.WaitExprAction createWaitExprAction();

  /**
   * Creates an instance of {@link WaitExprAction} with the given children.
   *
   * @return the new instance of WaitExprAction.
   */
  net.sourceforge.czt.circustime.ast.WaitExprAction createWaitExprAction( net.sourceforge.czt.circus.ast.CircusAction  circusAction, net.sourceforge.czt.z.ast.Expr  expr, net.sourceforge.czt.z.ast.Name  name);

  /**
   * Creates an instance of {@link TimeEndByAction}.
   *
   * @return the new instance of TimeEndByAction.
   */
  net.sourceforge.czt.circustime.ast.TimeEndByAction createTimeEndByAction();

  /**
   * Creates an instance of {@link TimeEndByAction} with the given children.
   *
   * @return the new instance of TimeEndByAction.
   */
  net.sourceforge.czt.circustime.ast.TimeEndByAction createTimeEndByAction( net.sourceforge.czt.circus.ast.CircusAction  circusAction, net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link TimeStartByProcess}.
   *
   * @return the new instance of TimeStartByProcess.
   */
  net.sourceforge.czt.circustime.ast.TimeStartByProcess createTimeStartByProcess();

  /**
   * Creates an instance of {@link TimeStartByProcess} with the given children.
   *
   * @return the new instance of TimeStartByProcess.
   */
  net.sourceforge.czt.circustime.ast.TimeStartByProcess createTimeStartByProcess( net.sourceforge.czt.circus.ast.CircusProcess  circusProcess, net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link TimeoutAction}.
   *
   * @return the new instance of TimeoutAction.
   */
  net.sourceforge.czt.circustime.ast.TimeoutAction createTimeoutAction();

  /**
   * Creates an instance of {@link TimeoutAction} with the given children.
   *
   * @return the new instance of TimeoutAction.
   */
  net.sourceforge.czt.circustime.ast.TimeoutAction createTimeoutAction(java.util.List<? extends net.sourceforge.czt.circus.ast.CircusAction>
 circusAction, net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link TimeStartByAction}.
   *
   * @return the new instance of TimeStartByAction.
   */
  net.sourceforge.czt.circustime.ast.TimeStartByAction createTimeStartByAction();

  /**
   * Creates an instance of {@link TimeStartByAction} with the given children.
   *
   * @return the new instance of TimeStartByAction.
   */
  net.sourceforge.czt.circustime.ast.TimeStartByAction createTimeStartByAction( net.sourceforge.czt.circus.ast.CircusAction  circusAction, net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link PrefixingTimeAction}.
   *
   * @return the new instance of PrefixingTimeAction.
   */
  net.sourceforge.czt.circustime.ast.PrefixingTimeAction createPrefixingTimeAction();

  /**
   * Creates an instance of {@link PrefixingTimeAction} with the given children.
   *
   * @return the new instance of PrefixingTimeAction.
   */
  net.sourceforge.czt.circustime.ast.PrefixingTimeAction createPrefixingTimeAction( net.sourceforge.czt.circus.ast.CircusAction  circusAction, net.sourceforge.czt.circus.ast.Communication  communication, net.sourceforge.czt.z.ast.Name  channelElapsedTime, net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link WaitAction}.
   *
   * @return the new instance of WaitAction.
   */
  net.sourceforge.czt.circustime.ast.WaitAction createWaitAction();

  /**
   * Creates an instance of {@link WaitAction} with the given children.
   *
   * @return the new instance of WaitAction.
   */
  net.sourceforge.czt.circustime.ast.WaitAction createWaitAction( net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link TimedinterruptAction}.
   *
   * @return the new instance of TimedinterruptAction.
   */
  net.sourceforge.czt.circustime.ast.TimedinterruptAction createTimedinterruptAction();

  /**
   * Creates an instance of {@link TimedinterruptAction} with the given children.
   *
   * @return the new instance of TimedinterruptAction.
   */
  net.sourceforge.czt.circustime.ast.TimedinterruptAction createTimedinterruptAction(java.util.List<? extends net.sourceforge.czt.circus.ast.CircusAction>
 circusAction, net.sourceforge.czt.z.ast.Expr  expr);

  /**
   * Creates an instance of {@link TimedinterruptProcess}.
   *
   * @return the new instance of TimedinterruptProcess.
   */
  net.sourceforge.czt.circustime.ast.TimedinterruptProcess createTimedinterruptProcess();

  /**
   * Creates an instance of {@link TimedinterruptProcess} with the given children.
   *
   * @return the new instance of TimedinterruptProcess.
   */
  net.sourceforge.czt.circustime.ast.TimedinterruptProcess createTimedinterruptProcess(java.util.List<? extends net.sourceforge.czt.circus.ast.CircusProcess>
 circusProcess, net.sourceforge.czt.z.ast.Expr  expr);


// c?x@N ---> A
net.sourceforge.czt.circustime.ast.PrefixingTimeAction createAtPrefixingAction( net.sourceforge.czt.circus.ast.CircusAction  circusAction, net.sourceforge.czt.circus.ast.Communication  communication, net.sourceforge.czt.z.ast.Name name);

// c?x --expr--> A
net.sourceforge.czt.circustime.ast.PrefixingTimeAction createPrefixingExprAction( net.sourceforge.czt.circus.ast.CircusAction  circusAction, net.sourceforge.czt.circus.ast.Communication  communication, net.sourceforge.czt.z.ast.Expr expr);

//c?x --expr--> A
net.sourceforge.czt.circustime.ast.PrefixingTimeAction createAtPrefixingExprAction( net.sourceforge.czt.circus.ast.CircusAction  circusAction, net.sourceforge.czt.circus.ast.Communication  communication, net.sourceforge.czt.z.ast.Name name, net.sourceforge.czt.z.ast.Expr expr);
}
