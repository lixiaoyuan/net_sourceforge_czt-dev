─ section proofCmds parents standard_toolkit └ 

Empty proof

├ emptyProof 
└ 

By single words

├ singleWord 
cases ;  
next ;  
conjunctive ;  
disjunctive ;  
prenex ;  
rearrange ;  
reduce ;  
rewrite ;  
simplify ;  
└ 

By multiple words

├ multipleWords 
trivial rewrite ;  
trivial simplify ;  
prove by rewrite ;  
prove by reduce ;  
equality substitute ;  
└ 

Per command kind. ApplyCommand

├ applyWordComplex 
apply xyz to expression x + 1 ;  
apply abc to predicate a ∈ b ;  
apply qwerty ;  
└ 

Case analysis command

├ caseAnalysisCmd 
cases ;  
next ;  
split P ;  
└ 

Normalization command

├ normCmd 
conjunctive ;  
disjunctive ;  
rearrange ;  
with normalization rewrite ;  
└ 

Quantifiers command

├ qntCmd 
prenex ;  
instantiate x == 10 + 5 , y == { a : ℕ ; b : ℕ | P ( a , b ) } , z == 0 , x$ == 10 ;  
prenex ;  
└ 

Simplification command

├ simpCmd 
prove by reduce ;  
rewrite ;  
reduce ;  
trivial simplify ;  
trivial rewrite ;  
simplify ;  
prove by rewrite ;  
prove by rewrite ;  
└ 

Susbstitution command

├ substCmd 
equality substitute ;  
equality substitute E ;  
invoke predicate P ;  
invoke Name ;  
invoke ( _ ↔ _ ) ;  
invoke ( seq _ ) ;  
invoke ;  
└ 

Use command

├ useCmd 
use otherName ;  
use otherName2 [ X , Y ] ;  
use name [ X , ℙ ℕ ] [ x := 10 ] ;  
use name [ x := 10 ] ;  
use name [ X , ℙ ℕ ] [ x := 10 , y := { a : ℕ ; b : ℕ } ] ;  
use name [ X , ℙ ℕ ] [ x := 10 , y := { a : ℕ ; b : ℕ } ] ;  
└ 

With commands

├ withCmds 
with predicate ( P ) rewrite ;  
with expression ( E ) reduce ;  
with enabled ( A , B , C , _ ↔ _ , _fun_ ) rewrite ;  
with disabled ( A , B , C ) reduce ;  
└ 

Combined commands

├ combinedCmd1 
with normalization with normalization reduce ;  
with enabled ( A , B , C ) with normalization with predicate ( P ) prove by reduce ;  
└ 


Special commands: weird names and all...

├ bla$dom 
prenex ;  
apply inDom to predicate x = dom f ∪ dom r ;  
apply S$member ;  
instantiate x == 10 + 5 , y == { a : ℕ ; b : ℕ | P ( a , b ) } , z == 0 , wierd$ == 20 ;  
prenex ;  
with enabled ( S$member , inDom ) prove by rewrite ;  
└ 

